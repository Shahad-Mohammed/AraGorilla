"1. instruction: يجب على المطورين تصميم نظام توصيات لتحسين تجربة المستخدم على منصة التجارة الإلكترونية الجديدة للشركة.\n   api: \n   - domain: Recommendation Systems\n   - framework: Apache Mahout\n   - functionality: Recommendation Generation\n   - api_name: org.apache.mahout.cf.taste.impl.model.file.FileDataModel\n   - api_call: FileDataModel dataModel = new FileDataModel(new File(\"data.csv\"));\n   - api_arguments: File path to the dataset file\n   - python_environment_requirements: Apache Mahout\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Use Apache Mahout to create a recommendation system for improving user experience on the company's new e-commerce platform.\n\n2. instruction: يرغب الباحثون في تطوير نموذج تعلم آلي للكشف عن المواد الضارة في الأغذية باستخدام البصمات الكيميائية.\n   api:\n   - domain: Machine Learning Classification\n   - framework: TensorFlow\n   - functionality: Model Development\n   - api_name: tensorflow.keras.Sequential\n   - api_call: model = tf.keras.Sequential()\n   - api_arguments: N/A\n   - python_environment_requirements: TensorFlow\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Utilize TensorFlow to build a machine learning model for detecting harmful substances in food using chemical fingerprints.\n\n3. instruction: يحتاج مطورو تطبيق الهاتف الذكي إلى تكامل تقنية تعقب المواقع لتوفير خدمة توصيل دقيقة.\n   api:\n   - domain: Geolocation Services\n   - framework: Google Maps API\n   - functionality: Location Tracking\n   - api_name: google.maps.Geolocation\n   - api_call: var geolocation = new google.maps.Geolocation();\n   - api_arguments: N/A\n   - python_environment_requirements: Google Maps API\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Integrate Google Maps API for accurate location tracking in the smartphone application delivery service.\n\n4. instruction: يريد العلماء تطبيق تقنية الذكاء الاصطناعي لتحليل الصور الفضائية لفهم أنماط التغيير في النظم البيئية.\n   api:\n   - domain: Image Processing\n   - framework: OpenCV\n   - functionality: Image Analysis\n   - api_name: cv2.imread\n   - api_call: image = cv2.imread('image.jpg', cv2.IMREAD_COLOR)\n   - api_arguments: Image file path, Image read mode\n   - python_environment_requirements: OpenCV\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Apply OpenCV for AI-based analysis of satellite images to understand patterns of change in ecological systems.\n\n5. instruction: يجب على مطوري تطبيقات الويب تنفيذ خدمة ترجمة نصية فورية لتعزيز التواصل الدولي بين المستخدمين.\n   api:\n   - domain: Translation Services\n   - framework: Google Cloud Translation API\n   - functionality: Text Translation\n   - api_name: google.cloud.translate_v2\n   - api_call: translation_client = google.cloud.translate_v2.TranslationServiceClient()\n   - api_arguments: N/A\n   - python_environment_requirements: Google Cloud Translation API\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Implement Google Cloud Translation API for real-time text translation service to enhance international user communication in web applications.\n\n6. instruction: لدينا نظام تقدير أداء الطلاب ونحتاج إلى تنفيذ نموذج تعلم آلي لتحسين دقة توصيات التقييم.\n   api:\n   - domain: Machine Learning Regression\n   - framework: Scikit-learn\n   - functionality: Model Training\n   - api_name: sklearn.linear_model.LinearRegression\n   - api_call: model = sklearn.linear_model.LinearRegression()\n   - api_arguments: N/A\n   - python_environment_requirements: Scikit-learn\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Use Scikit-learn to implement a machine learning model to enhance the accuracy of student performance estimation and recommendations.\n\n7. instruction: تطلب الشركة تطوير نظام إدارة المحتوى الذي يمكنه تحليل النصوص باللغة العربية لاستخلاص الأفكار الرئيسية من المقالات.\n   api:\n   - domain: Natural Language Processing Text Analysis\n   - framework: spaCy\n   - functionality: Text Analysis\n   - api_name: spacy.load\n   - api_call: nlp = spacy.load(\"xx_ent_wiki_sm\")\n   - api_arguments: Language model name\n   - python_environment_requirements: spaCy\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Develop a Content Management System capable of analyzing Arabic texts to extract key ideas from articles using spaCy.\n\n8. instruction: يهدف باحثو الروبوتات إلى تطوير نظام تعرف على الأشياء لزيادة فعالية عمل الروبوتات في التفاعل مع البيئة.\n   api:\n   - domain: Computer Vision Object Recognition\n   - framework: OpenCV\n   - functionality: Object Detection\n   - api_name: cv2.CascadeClassifier\n   - api_call: cascade_classifier = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')\n   - api_arguments: Cascade classifier XML file path for object detection\n   - python_environment_requirements: OpenCV\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Researchers aim to develop an object recognition system to enhance robot efficiency in interacting with the environment using OpenCV.\n\n9. instruction: نرغب في تنفيذ نظام استشعار IoT لرصد حالة المناخ في المزارع لتحسين عمليات الري والزراعة.\n   api:\n   - domain: Internet of Things (IoT)\n   - framework: Arduino\n   - functionality: Sensor Integration\n   - api_name: Wire.begin\n   - api_call: Wire.begin()\n   - api_arguments: N/A\n   - python_environment_requirements: Arduino\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Implement an IoT sensor system to monitor climate conditions in farms for enhancing irrigation and agricultural processes using Arduino.\n\n10. instruction: يجب على مهندسي البرمجيات تنفيذ نظام استشعار لقياس جودة الهواء في المباني لتعزيز صحة وسلامة المستخدمين.\n   api:\n   - domain: Environmental Monitoring Sensors\n   - framework: Raspberry Pi\n   - functionality: Sensor Data Collection\n   - api_name: gpiozero.AirQualitySensor\n   - api_call: sensor = gpiozero.AirQualitySensor(pin=17, threshold=0.5)\n   - api_arguments: GPIO pin configuration, Air quality threshold\n   - python_environment_requirements: gpiozero, Raspberry Pi\n   - example_code: N/A\n   - performance: dataset: N/A accuracy: N/A\n   - description: Software engineers need to implement a sensor system for measuring indoor air quality in buildings to enhance user health and safety using Raspberry Pi."
"1. instruction: تحتاج شركتنا إلى تطوير نظام لتحليل مشاعر التغريدات لفهم ردود الفعل على منتجاتنا الجديدة. نريد استخدام API لاستخراج الملامح الرئيسية من النصوص.  \napi:  \n- domain: Natural Language Processing Sentiment Analysis  \n- framework: Hugging Face Transformers  \n- functionality: Sentiment Analysis  \n- api_name: johnson-tremblay/bart-large-60M-arabic-sentiment  \n- api_call: AutoModel.from_pretrained('johnson-tremblay/bart-large-60M-arabic-sentiment')  \n- api_arguments: N/A  \n- python_environment_requirements: transformers  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: A pre-trained BART model specialized in Arabic sentiment analysis, available in the Hugging Face Transformers library.\n\n2. instruction: لدينا تطبيق للمحادثات الصوتية ونحتاج إلى إضافة خاصية تحويل النص إلى كلام بالعربية وبدقة عالية. هل يمكن استخدام API معين للقيام بذلك؟  \napi:  \n- domain: Natural Language Processing Text-to-Speech  \n- framework: Google Cloud Text-to-Speech  \n- functionality: Text-to-Speech  \n- api_name: google-cloud-text-to-speech  \n- api_call: client = texttospeech.TextToSpeechClient()  \n- api_arguments: N/A  \n- python_environment_requirements: google-cloud-texttospeech  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: Google Cloud Text-to-Speech API allows high-quality text-to-speech conversion in various languages, including Arabic.\n\n3. instruction: نحتاج إلى تطوير نظام لتحليل محتوى الفيديوهات واستخراج المشاهد الرئيسية. هل يمكن استخدام API لاستخراج الميزات البصرية من الفيديوهات؟  \napi:  \n- domain: Computer Vision Video Analysis  \n- framework: OpenCV  \n- functionality: Video Feature Extraction  \n- api_name: opencv-python  \n- api_call: cap = cv2.VideoCapture('video.mp4')  \n- api_arguments: N/A  \n- python_environment_requirements: opencv-python  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: OpenCV is a popular library for computer vision tasks, including video analysis and feature extraction.\n\n4. instruction: نرغب في تحسين نظام إدارة العملاء الخاص بشركتنا بتخصيص تلميحات ذكية بناءً على محتوى الرسائل الإلكترونية. هل هناك API متاح لتنفيذ هذه الوظيفة؟  \napi:  \n- domain: Natural Language Processing Text Analysis  \n- framework: SpaCy  \n- functionality: Named Entity Recognition  \n- api_name: spacy  \n- api_call: nlp = spacy.load(\"en_core_web_sm\")  \n- api_arguments: N/A  \n- python_environment_requirements: spacy  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: SpaCy is a powerful library for performing various NLP tasks, such as named entity recognition, which can be utilized to enhance customer management systems.\n\n5. instruction: يجب علينا تطوير نظام توصيات مُخصص لموقعنا الإلكتروني. هل يمكن استخدام API لتحليل سلوك المستخدمين وتوفير توصيات فعالة؟  \napi:  \n- domain: Machine Learning Recommendation Systems  \n- framework: TensorFlow  \n- functionality: Recommender Systems  \n- api_name: tensorflow-recommenders  \n- api_call: N/A  \n- api_arguments: N/A  \n- python_environment_requirements: tensorflow-recommenders  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: TensorFlow Recommenders provides tools and models for building recommendation systems based on user behavior analysis, suitable for creating personalized recommendations for websites.\n\n6. instruction: نود إنشاء نموذج تسمية نصوص طبية باستخدام تقنيات التعلم العميق. هل توجد واجهة برمجية توفر خدمة تصنيف نصوص طبية؟  \napi:  \n- domain: Natural Language Processing Text Classification  \n- framework: PyTorch  \n- functionality: Text Classification  \n- api_name: pytorch-bert-medical  \n- api_call: N/A  \n- api_arguments: N/A  \n- python_environment_requirements: pytorch  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: A specialized BERT model for medical text classification using PyTorch, ideal for creating models to categorize medical texts accurately.\n\n7. instruction: تهدف شركتنا إلى تطوير نظام لتحليل السلوكيات العملية في الشبكات الاجتماعية. هل يوجد API يمكن استخدامه لتحليل البيانات الاجتماعية؟  \napi:  \n- domain: Social Network Analysis  \n- framework: NetworkX  \n- functionality: Social Network Analysis  \n- api_name: networkx  \n- api_call: import networkx as nx  \n- api_arguments: N/A  \n- python_environment_requirements: networkx  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: NetworkX is a powerful library for analyzing social networks, enabling the extraction of insights and patterns from social media data for business intelligence purposes.\n\n8. instruction: نريد إنشاء نظام لتحليل الصور الطبية وتشخيص الأمراض باستخدام تعلم الآلة. هل يمكن استخدام API للوصول إلى نماذج مدربة مسبقًا لهذا الغرض؟  \napi:  \n- domain: Computer Vision Medical Image Analysis  \n- framework: TensorFlow  \n- functionality: Medical Image Diagnosis  \n- api_name: tensorflow-medical-models  \n- api_call: N/A  \n- api_arguments: N/A  \n- python_environment_requirements: tensorflow-medical-models  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: TensorFlow Medical Models offer pre-trained models for medical image analysis, facilitating the development of systems for diagnosing diseases from medical images efficiently.\n\n9. instruction: نعمل على تطوير نظام لتحليل الأصوات والتعرف على الكلمات عن طريق تعلم الآلة. هل يمكن الاعتماد على API لتدريب نماذج تعلم الآلة لهذا النوع من التطبيقات؟  \napi:  \n- domain: Machine Learning Speech Recognition  \n- framework: Kaldi  \n- functionality: Speech Recognition  \n- api_name: kaldi-asr  \n- api_call: N/A  \n- api_arguments: N/A  \n- python_environment_requirements: kaldi-asr  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: Kaldi ASR provides tools for training speech recognition models using machine learning techniques, suitable for applications that require accurate speech-to-text capabilities.\n\n10. instruction: نحتاج إلى تطوير نظام لتحليل بيانات الإنترنت العميق لفهم سلوك العملاء عبر الإنترنت. هل يمكن استخدام API لاستخراج المعلومات الرئيسية من بيانات الويب؟  \napi:  \n- domain: Web Data Analysis  \n- framework: Beautiful Soup  \n- functionality: Web Scraping  \n- api_name: BeautifulSoup  \n- api_call: from bs4 import BeautifulSoup  \n- api_arguments: N/A  \n- python_environment_requirements: beautifulsoup4  \n- example_code: N/A  \n- performance: dataset: N/A  \n- accuracy: N/A  \n- description: BeautifulSoup is a library used for web scraping in Python, allowing the extraction of data from web pages for in-depth analysis and insights into customer online behavior."
"1. instruction: استخدم منصة الـAPI المقدمة لتوليد نصوص شعرية مبتكرة باستخدام بيئة التحويلات النصية.api: domain: Natural Language Processing Creative Writing framework: Hugging Face Transformers functionality: Text Generation api_name: metraelo/bert-base-arabic-poetry api_call: AutoModel.from_pretrained('metraelo/bert-base-arabic-poetry') api_arguments: N/A python_environment_requirements: transformers example_code: N/A performance: dataset: N/A accuracy: N/A description: A pre-trained Arabic poetry generation model provided by Metraelo, leveraging the Hugging Face Transformers library.\n\n2. instruction: إنشاء نموذج للتعرف على الصور من تصنيفات مختلفة باستخدام البصر الاصطناعي.api: domain: Computer Vision Image Recognition framework: TensorFlow functionality: Image Classification api_name: TensorFlow/Keras VGG16 api_call: tf.keras.applications.VGG16(weights='imagenet') api_arguments: N/A python_environment_requirements: TensorFlow example_code: N/A performance: dataset: N/A accuracy: N/A description: Use the VGG16 pre-trained model from TensorFlow/Keras for image classification tasks in artificial intelligence.\n\n3. instruction: قم بتحديث تطبيقك ليتمكن من استخدام خدمات API للتحويل الصوتي إلى نص.api: domain: Speech Processing Text Conversion framework: Google Cloud Speech-to-Text API functionality: Audio to Text Conversion api_name: Google Cloud Speech-to-Text api_call: speech_to_text_conversion('audio_file.mp3') api_arguments: N/A python_environment_requirements: N/A example_code: N/A performance: dataset: N/A accuracy: N/A description: Integrate Google Cloud's Speech-to-Text API into your application for converting audio files to text.\n\n4. instruction: أنشئ نظام توصية للمستخدمين باستخدام البيانات التاريخية باستخدام خوارزميات تعلم الآلة.api: domain: Recommendation Systems Machine Learning framework: scikit-learn functionality: Recommendation Algorithm api_name: scikit-learn Collaborative Filtering api_call: RecommendationModel.fit(user_history_data) api_arguments: N/A python_environment_requirements: scikit-learn example_code: N/A performance: dataset: N/A accuracy: N/A description: Develop a user recommendation system using historical data and collaborative filtering algorithms in scikit-learn.\n\n5. instruction: اكتب برنامج يستخدم خوارزمية تعلم الآلة للتنبؤ بحالة الطقس لمدة 7 أيام مقبلة.api: domain: Weather Forecasting Machine Learning framework: TensorFlow functionality: Weather Prediction api_name: TensorFlow Weather Forecasting api_call: PredictWeather.for_next_7_days() api_arguments: N/A python_environment_requirements: TensorFlow example_code: N/A performance: dataset: N/A accuracy: N/A description: Implement a machine learning algorithm to predict weather conditions for the next 7 days using TensorFlow.\n\n6. instruction: احتسب تصنيفات العملاء الجدد باستخدام نموذج تصنيف تعلم الآلة.api: domain: Customer Segmentation Machine Learning framework: scikit-learn functionality: Customer Classification api_name: scikit-learn Customer Segmentation api_call: classification_model.predict(new_customers_data) api_arguments: N/A python_environment_requirements: scikit-learn example_code: N/A performance: dataset: N/A accuracy: N/A description: Use a machine learning classification model in scikit-learn to classify new customers into different segments.\n\n7. instruction: أنشئ نظام يستخدم البصر الاصطناعي للكشف عن الوجوه في الصور.api: domain: Computer Vision Face Detection framework: OpenCV functionality: Facial Recognition api_name: OpenCV Face Detection api_call: face_detect_in_image('image.jpg') api_arguments: N/A python_environment_requirements: OpenCV example_code: N/A performance: dataset: N/A accuracy: N/A description: Develop a system utilizing artificial intelligence for detecting faces in images using OpenCV's face detection capabilities.\n\n8. instruction: استخدم نموذج التعلم الآلي المحمل مسبقًا للتعرف على أعمال الفنانين من صورهم.api: domain: Computer Vision Artist Recognition framework: PyTorch functionality: Artist Identification api_name: PyTorch Artist Recognition api_call: artist_recognition_model.predict(image_file) api_arguments: N/A python_environment_requirements: PyTorch example_code: N/A performance: dataset: N/A accuracy: N/A description: Utilize a pre-trained machine learning model for recognizing artists from their images in PyTorch.\n\n9. instruction: قم بتطوير تطبيق يستخدم API لترجمة النصوص بين لغات متعددة.api: domain: Natural Language Processing Translation framework: Google Cloud Translate API functionality: Text Translation api_name: Google Cloud Translate api_call: translate_text('text_to_translate', 'source_lang', 'target_lang') api_arguments: N/A python_environment_requirements: N/A example_code: N/A performance: dataset: N/A accuracy: N/A description: Develop an application utilizing Google Cloud Translate API for translating texts between multiple languages.\n\n10. instruction: تطوير نظام لتحليل المشاعر من التغريدات باستخدام تقنيات معالجة اللغة الطبيعية.api: domain: Natural Language Processing Sentiment Analysis framework: NLTK functionality: Sentiment Classification api_name: NLTK Sentiment Analyzer api_call: sentiment_analysis(tweets_data) api_arguments: N/A python_environment_requirements: NLTK example_code: N/A performance: dataset: N/A accuracy: N/A description: Develop a system for analyzing sentiments from tweets using natural language processing techniques with NLTK's sentiment analysis functionality."
