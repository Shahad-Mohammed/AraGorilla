"{\"instruction\":\"\u064a\u0648\u062c\u062f \u0645\u0637\u0648\u0631 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629 \u0648\u064a\u062d\u062a\u0627\u062c \u0644\u062f\u0645\u062c \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0639\u0628\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c.\\n5. \u064a\u062c\u0628 \u0645\u0644\u0627\u062d\u0638\u0629 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633\u062a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0645\u0631\u0626\u064a\u0629.\"}],\"domain\":\"\"}"
"{\"instruction\":\"\u064a\u0648\u062c\u062f \u0645\u0637\u0648\u0631 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629 \u0648\u064a\u062d\u062a\u0627\u062c \u0644\u062f\u0645\u062c \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0639\u0628\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c.\\n5. \u064a\u062c\u0628 \u0645\u0644\u0627\u062d\u0638\u0629 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633\u062a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0645\u0631\u0626\u064a\u0629.\"}],\"domain\":\"\"}"
"{\"instruction\":\"\u0623\u0646\u0634\u0626 \u062a\u0637\u0628\u064a\u0642\u064b\u0627 \u064a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644 \u0627\u0644\u0641\u0635\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a \u0645\u0646 \u0623\u062c\u0644 \u0627\u0644\u0637\u0644\u0627\u0628 \u0648\u0627\u0644\u0645\u062f\u0631\u0633\u064a\u0646. \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0634\u0645\u0644 \u0639\u0631\u0636 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0648\u0627\u0644\u0645\u0648\u0627\u0639\u064a\u062f \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u0629 \u0648\u062a\u0639\u064a\u064a\u0646 \u0627\u0644\u0645\u0647\u0627\u0645 \u0648\u0627\u0644\u0648\u0627\u062c\u0628\u0627\u062a.\",\"instances\":[{\"API\":{\"domain\":\"Education Scheduling\",\"framework\":\"SchedulerPlus\",\"functionality\":\"Class-Scheduling\",\"api_name\":\"SmartSchedule-2002/ClassPlus\",\"api_call\":\"scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\",\"api_arguments\":[\"class_info.json\",\"timetable.xlsx\"],\"python_environment_requirements\":[\"schedulerplus\",\"class-management\",\"timetableing\"],\"example_code\":\"Step 1: Enter class details in 'class_info.json' file\\nStep 2: Update the class timetable in 'timetable.xlsx'\\nStep 3: Run the command 'scheduler-create-class' to create the class schedule\\nStep 4: Access the timetable for viewing and managing classes\",\"performance\":{\"dataset\":\"ClassPlus\",\"accuracy\":\"Not provided\"},\"description\":\"This is a scheduling tool for educational institutions to manage class schedules and assignments effectively.\"},\"output\":\"<<<domain>>>: Education Scheduling\\n<<<api_call>>>: scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\\n<<<api_provider>>>: SchedulerPlus\\n<<<explanation>>>: 1. \u0623\u062f\u062e\u0644 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0635\u0641 \u0641\u064a \u0645\u0644\u0641 'class_info.json'\\n2. \u0642\u0645 \u0628\u062a\u062d\u062f\u064a\u062b \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\u0648\u0641 \u0641\u064a 'timetable.xlsx'\\n3. \u0642\u0645 \u0628\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0623\u0645\u0631 'scheduler-create-class' \u0644\u0625\u0646\u0634\u0627\u0621 \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\\n4. \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0644\u0639\u0631\u0636 \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0635\u0641\u0648\u0641\"}]}]}"
"{\"instruction\":\"\u062a\u0648\u062c\u062f \u0637\u0644\u0628\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0623\u0645\u062b\u0644\u0629 \u062c\u062f\u064a\u062f\u0629 \u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u0628\u064a\u0646\u0629\u060c \u064a\u0631\u062c\u0649 \u062a\u0648\u0644\u064a\u062f \u0645\u062b\u0627\u0644 \u062c\u062f\u064a\u062f \u0628\u0646\u0641\u0633 \u0627\u0644\u0635\u064a\u063a\u0629:\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":,\"python_environment_requirements\":,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}"
"{\"instruction\":\"\u064a\u0648\u062c\u062f \u0645\u0637\u0648\u0631 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629 \u0648\u064a\u062d\u062a\u0627\u062c \u0644\u062f\u0645\u062c \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0639\u0628\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c.\\n5. \u064a\u062c\u0628 \u0645\u0644\u0627\u062d\u0638\u0629 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633\u062a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0645\u0631\u0626\u064a\u0629.\"}],\"domain\":\"\"}"
"{\"instruction\":\"\u0623\u0646\u0634\u0626 \u062a\u0637\u0628\u064a\u0642\u064b\u0627 \u064a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644 \u0627\u0644\u0641\u0635\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a \u0645\u0646 \u0623\u062c\u0644 \u0627\u0644\u0637\u0644\u0627\u0628 \u0648\u0627\u0644\u0645\u062f\u0631\u0633\u064a\u0646. \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0634\u0645\u0644 \u0639\u0631\u0636 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0648\u0627\u0644\u0645\u0648\u0627\u0639\u064a\u062f \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u0629 \u0648\u062a\u0639\u064a\u064a\u0646 \u0627\u0644\u0645\u0647\u0627\u0645 \u0648\u0627\u0644\u0648\u0627\u062c\u0628\u0627\u062a.\",\"instances\":[{\"API\":{\"domain\":\"Education Scheduling\",\"framework\":\"SchedulerPlus\",\"functionality\":\"Class-Scheduling\",\"api_name\":\"SmartSchedule-2002/ClassPlus\",\"api_call\":\"scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\",\"api_arguments\":[\"class_info.json\",\"timetable.xlsx\"],\"python_environment_requirements\":[\"schedulerplus\",\"class-management\",\"timetableing\"],\"example_code\":\"Step 1: Enter class details in 'class_info.json' file\\nStep 2: Update the class timetable in 'timetable.xlsx'\\nStep 3: Run the command 'scheduler-create-class' to create the class schedule\\nStep 4: Access the timetable for viewing and managing classes\",\"performance\":{\"dataset\":\"ClassPlus\",\"accuracy\":\"Not provided\"},\"description\":\"This is a scheduling tool for educational institutions to manage class schedules and assignments effectively.\"},\"output\":\"<<<domain>>>: Education Scheduling\\n<<<api_call>>>: scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\\n<<<api_provider>>>: SchedulerPlus\\n<<<explanation>>>: 1. \u0623\u062f\u062e\u0644 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0635\u0641 \u0641\u064a \u0645\u0644\u0641 'class_info.json'\\n2. \u0642\u0645 \u0628\u062a\u062d\u062f\u064a\u062b \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\u0648\u0641 \u0641\u064a 'timetable.xlsx'\\n3. \u0642\u0645 \u0628\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0623\u0645\u0631 'scheduler-create-class' \u0644\u0625\u0646\u0634\u0627\u0621 \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\\n4. \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0644\u0639\u0631\u0636 \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0635\u0641\u0648\u0641\"}]}]}"
"{\"instruction\":\"\u0627\u0646\u0634\u0631 \u0639\u0646 \u0645\u0624\u0633\u0633\u062a\u0643\u0645 \u0627\u0644\u062a\u064a \u062a\u0642\u0648\u0645 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u0628\u062d\u062b \u0639\u0646 \u0627\u0644\u0648\u0638\u0627\u0626\u0641\",\"instances\":[{\"API\":{\"domain\":\"Tabular Tabular Classification\",\"framework\":\"Scikit-learn\",\"functionality\":\"Joblib\",\"api_name\":\"julien-c/skops-digits\",\"api_call\":\"load('path_to_folder/sklearn_model.joblib')\",\"api_arguments\":{\"activation\":\"relu\",\"alpha\":0.0001,\"batch_size\":\"auto\",\"beta_1\":0.9,\"beta_2\":0.999,\"early_stopping\":\"False\",\"epsilon\":1e-08,\"hidden_layer_sizes\":\"(100,)\",\"learning_rate\":\"constant\",\"learning_rate_init\":0.001,\"max_fun\":15000,\"max_iter\":200,\"momentum\":0.9,\"n_iter_no_change\":10,\"nesterovs_momentum\":\"True\",\"power_t\":0.5,\"random_state\":null,\"shuffle\":\"True\",\"solver\":\"adam\",\"tol\":0.0001,\"validation_fraction\":0.1,\"verbose\":\"False\",\"warm_start\":\"False\"},\"python_environment_requirements\":\"scikit-learn, joblib\",\"example_code\":\"This model can be loaded on the Inference API on-demand.\",\"performance\":{\"dataset\":null,\"accuracy\":null},\"description\":\"A tabular classification model using the Scikit-learn framework and Joblib functionality. The model is trained with various hyperparameters and can be used for classification tasks.\"},\"output\":\"<<<domain>>>: Tabular Tabular Classification\\n<<<api_call>>>: load('path_to_folder/sklearn_model.joblib')\\n<<<api_provider>>>: Scikit-learn\\n<<<explanation>>>:1. \u0633\u0646\u0633\u062a\u062e\u062f\u0645 \u0646\u0645\u0648\u0630\u062c \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u0648\u0644\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 \u0645\u0646 Scikit-Learn \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631\u0629 \u0641\u064a \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.\\n2. \u064a\u0645\u0643\u0646 \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 `load` \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062d\u0632\u0645\u0629 joblib \u0648\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0645\u0633\u0627\u0631 \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c (\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629\u060c 'path_to_folder/sklearn_model.joblib').\\n3. \u0628\u0645\u062c\u0631\u062f \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u060c \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u062c\u0631\u0627\u0621 \u062a\u0646\u0628\u0624\u0627\u062a \u0628\u0634\u0623\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u064a\u0632\u0627\u062a\u060c \u0645\u062b\u0644 \u0633\u0646\u0648\u0627\u062a \u0627\u0644\u062e\u0628\u0631\u0629\u060c \u0623\u0648 \u0627\u0644\u0645\u0633\u0645\u0649 \u0627\u0644\u0648\u0638\u064a\u0641\u064a\u060c \u0623\u0648 \u0627\u0644\u0645\u0648\u0642\u0639\u060c \u0648\u0627\u0644\u062a\u064a \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0628\u0639\u062f \u0630\u0644\u0643 \u0644\u062a\u0642\u062f\u064a\u0631 \u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629.\\n4. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0631\u0627\u062a\u0628 \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0643\u062c\u0632\u0621 \u0645\u0646 \u0645\u0646\u062a\u062c \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u0632\u0648\u064a\u062f \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0628\u062a\u0642\u062f\u064a\u0631 \u0644\u0644\u062f\u062e\u0644 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0644\u0642\u0627\u0626\u0645\u0629 \u0648\u0638\u0627\u0626\u0641 \u0645\u0639\u064a\u0646\u0629.\\n\"}]}"
"{\"instruction\":\"\u062a\u0648\u062c\u062f \u0637\u0644\u0628\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0623\u0645\u062b\u0644\u0629 \u062c\u062f\u064a\u062f\u0629 \u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u0628\u064a\u0646\u0629\u060c \u064a\u0631\u062c\u0649 \u062a\u0648\u0644\u064a\u062f \u0645\u062b\u0627\u0644 \u062c\u062f\u064a\u062f \u0628\u0646\u0641\u0633 \u0627\u0644\u0635\u064a\u063a\u0629:\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":,\"python_environment_requirements\":,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}"
"{\"instruction\":\"\u064a\u0648\u062c\u062f \u0645\u0637\u0648\u0631 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629 \u0648\u064a\u062d\u062a\u0627\u062c \u0644\u062f\u0645\u062c \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0639\u0628\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c.\\n5. \u064a\u062c\u0628 \u0645\u0644\u0627\u062d\u0638\u0629 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633\u062a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0645\u0631\u0626\u064a\u0629.\"}],\"domain\":\"\"}"
"{\"instruction\":\"\u0623\u0646\u0634\u0626 \u062a\u0637\u0628\u064a\u0642\u064b\u0627 \u064a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644 \u0627\u0644\u0641\u0635\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a \u0645\u0646 \u0623\u062c\u0644 \u0627\u0644\u0637\u0644\u0627\u0628 \u0648\u0627\u0644\u0645\u062f\u0631\u0633\u064a\u0646. \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0634\u0645\u0644 \u0639\u0631\u0636 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0648\u0627\u0644\u0645\u0648\u0627\u0639\u064a\u062f \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u0629 \u0648\u062a\u0639\u064a\u064a\u0646 \u0627\u0644\u0645\u0647\u0627\u0645 \u0648\u0627\u0644\u0648\u0627\u062c\u0628\u0627\u062a.\",\"instances\":[{\"API\":{\"domain\":\"Education Scheduling\",\"framework\":\"SchedulerPlus\",\"functionality\":\"Class-Scheduling\",\"api_name\":\"SmartSchedule-2002/ClassPlus\",\"api_call\":\"scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\",\"api_arguments\":[\"class_info.json\",\"timetable.xlsx\"],\"python_environment_requirements\":[\"schedulerplus\",\"class-management\",\"timetableing\"],\"example_code\":\"Step 1: Enter class details in 'class_info.json' file\\nStep 2: Update the class timetable in 'timetable.xlsx'\\nStep 3: Run the command 'scheduler-create-class' to create the class schedule\\nStep 4: Access the timetable for viewing and managing classes\",\"performance\":{\"dataset\":\"ClassPlus\",\"accuracy\":\"Not provided\"},\"description\":\"This is a scheduling tool for educational institutions to manage class schedules and assignments effectively.\"},\"output\":\"<<<domain>>>: Education Scheduling\\n<<<api_call>>>: scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\\n<<<api_provider>>>: SchedulerPlus\\n<<<explanation>>>: 1. \u0623\u062f\u062e\u0644 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0635\u0641 \u0641\u064a \u0645\u0644\u0641 'class_info.json'\\n2. \u0642\u0645 \u0628\u062a\u062d\u062f\u064a\u062b \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\u0648\u0641 \u0641\u064a 'timetable.xlsx'\\n3. \u0642\u0645 \u0628\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0623\u0645\u0631 'scheduler-create-class' \u0644\u0625\u0646\u0634\u0627\u0621 \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\\n4. \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0644\u0639\u0631\u0636 \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0635\u0641\u0648\u0641\"}]}]}"
"{\"instruction\":\"\u0627\u0646\u0634\u0631 \u0639\u0646 \u0645\u0624\u0633\u0633\u062a\u0643\u0645 \u0627\u0644\u062a\u064a \u062a\u0642\u0648\u0645 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u0628\u062d\u062b \u0639\u0646 \u0627\u0644\u0648\u0638\u0627\u0626\u0641\",\"instances\":[{\"API\":{\"domain\":\"Tabular Tabular Classification\",\"framework\":\"Scikit-learn\",\"functionality\":\"Joblib\",\"api_name\":\"julien-c/skops-digits\",\"api_call\":\"load('path_to_folder/sklearn_model.joblib')\",\"api_arguments\":{\"activation\":\"relu\",\"alpha\":0.0001,\"batch_size\":\"auto\",\"beta_1\":0.9,\"beta_2\":0.999,\"early_stopping\":\"False\",\"epsilon\":1e-08,\"hidden_layer_sizes\":\"(100,)\",\"learning_rate\":\"constant\",\"learning_rate_init\":0.001,\"max_fun\":15000,\"max_iter\":200,\"momentum\":0.9,\"n_iter_no_change\":10,\"nesterovs_momentum\":\"True\",\"power_t\":0.5,\"random_state\":null,\"shuffle\":\"True\",\"solver\":\"adam\",\"tol\":0.0001,\"validation_fraction\":0.1,\"verbose\":\"False\",\"warm_start\":\"False\"},\"python_environment_requirements\":\"scikit-learn, joblib\",\"example_code\":\"This model can be loaded on the Inference API on-demand.\",\"performance\":{\"dataset\":null,\"accuracy\":null},\"description\":\"A tabular classification model using the Scikit-learn framework and Joblib functionality. The model is trained with various hyperparameters and can be used for classification tasks.\"},\"output\":\"<<<domain>>>: Tabular Tabular Classification\\n<<<api_call>>>: load('path_to_folder/sklearn_model.joblib')\\n<<<api_provider>>>: Scikit-learn\\n<<<explanation>>>:1. \u0633\u0646\u0633\u062a\u062e\u062f\u0645 \u0646\u0645\u0648\u0630\u062c \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u0648\u0644\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 \u0645\u0646 Scikit-Learn \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631\u0629 \u0641\u064a \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.\\n2. \u064a\u0645\u0643\u0646 \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 `load` \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062d\u0632\u0645\u0629 joblib \u0648\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0645\u0633\u0627\u0631 \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c (\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629\u060c 'path_to_folder/sklearn_model.joblib').\\n3. \u0628\u0645\u062c\u0631\u062f \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u060c \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u062c\u0631\u0627\u0621 \u062a\u0646\u0628\u0624\u0627\u062a \u0628\u0634\u0623\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u064a\u0632\u0627\u062a\u060c \u0645\u062b\u0644 \u0633\u0646\u0648\u0627\u062a \u0627\u0644\u062e\u0628\u0631\u0629\u060c \u0623\u0648 \u0627\u0644\u0645\u0633\u0645\u0649 \u0627\u0644\u0648\u0638\u064a\u0641\u064a\u060c \u0623\u0648 \u0627\u0644\u0645\u0648\u0642\u0639\u060c \u0648\u0627\u0644\u062a\u064a \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0628\u0639\u062f \u0630\u0644\u0643 \u0644\u062a\u0642\u062f\u064a\u0631 \u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629.\\n4. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0631\u0627\u062a\u0628 \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0643\u062c\u0632\u0621 \u0645\u0646 \u0645\u0646\u062a\u062c \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u0632\u0648\u064a\u062f \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0628\u062a\u0642\u062f\u064a\u0631 \u0644\u0644\u062f\u062e\u0644 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0644\u0642\u0627\u0626\u0645\u0629 \u0648\u0638\u0627\u0626\u0641 \u0645\u0639\u064a\u0646\u0629.\\n\"}]}"
"{\"instruction\":\"\u062a\u0648\u062c\u062f \u0637\u0644\u0628\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0623\u0645\u062b\u0644\u0629 \u062c\u062f\u064a\u062f\u0629 \u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u0628\u064a\u0646\u0629\u060c \u064a\u0631\u062c\u0649 \u062a\u0648\u0644\u064a\u062f \u0645\u062b\u0627\u0644 \u062c\u062f\u064a\u062f \u0628\u0646\u0641\u0633 \u0627\u0644\u0635\u064a\u063a\u0629:\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":,\"python_environment_requirements\":,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}"
"{\"instruction\":\"\u0623\u0646\u0634\u0626 \u062a\u0637\u0628\u064a\u0642\u064b\u0627 \u064a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644 \u0627\u0644\u0641\u0635\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a \u0645\u0646 \u0623\u062c\u0644 \u0627\u0644\u0637\u0644\u0627\u0628 \u0648\u0627\u0644\u0645\u062f\u0631\u0633\u064a\u0646. \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0634\u0645\u0644 \u0639\u0631\u0636 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0648\u0627\u0644\u0645\u0648\u0627\u0639\u064a\u062f \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u0629 \u0648\u062a\u0639\u064a\u064a\u0646 \u0627\u0644\u0645\u0647\u0627\u0645 \u0648\u0627\u0644\u0648\u0627\u062c\u0628\u0627\u062a.\",\"instances\":[{\"API\":{\"domain\":\"Education Scheduling\",\"framework\":\"SchedulerPlus\",\"functionality\":\"Class-Scheduling\",\"api_name\":\"SmartSchedule-2002/ClassPlus\",\"api_call\":\"scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\",\"api_arguments\":[\"class_info.json\",\"timetable.xlsx\"],\"python_environment_requirements\":[\"schedulerplus\",\"class-management\",\"timetableing\"],\"example_code\":\"Step 1: Enter class details in 'class_info.json' file\\nStep 2: Update the class timetable in 'timetable.xlsx'\\nStep 3: Run the command 'scheduler-create-class' to create the class schedule\\nStep 4: Access the timetable for viewing and managing classes\",\"performance\":{\"dataset\":\"ClassPlus\",\"accuracy\":\"Not provided\"},\"description\":\"This is a scheduling tool for educational institutions to manage class schedules and assignments effectively.\"},\"output\":\"<<<domain>>>: Education Scheduling\\n<<<api_call>>>: scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\\n<<<api_provider>>>: SchedulerPlus\\n<<<explanation>>>: 1. \u0623\u062f\u062e\u0644 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0635\u0641 \u0641\u064a \u0645\u0644\u0641 'class_info.json'\\n2. \u0642\u0645 \u0628\u062a\u062d\u062f\u064a\u062b \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\u0648\u0641 \u0641\u064a 'timetable.xlsx'\\n3. \u0642\u0645 \u0628\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0623\u0645\u0631 'scheduler-create-class' \u0644\u0625\u0646\u0634\u0627\u0621 \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\\n4. \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0644\u0639\u0631\u0636 \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0635\u0641\u0648\u0641\"}]}]}"
"{\"instruction\":\"\u064a\u0648\u062c\u062f \u0645\u0637\u0648\u0631 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629 \u0648\u064a\u062d\u062a\u0627\u062c \u0644\u062f\u0645\u062c \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0639\u0628\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c.\\n5. \u064a\u062c\u0628 \u0645\u0644\u0627\u062d\u0638\u0629 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633\u062a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0645\u0631\u0626\u064a\u0629.\"}],\"domain\":\"\"}"
"{\"instruction\":\"\u0625\u0639\u062f\u0627\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c \u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0631\u0627\u062a\u0628 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Tabular Tabular Classification\",\"framework\":\"Scikit-learn\",\"functionality\":\"Joblib\",\"api_name\":\"julien-c/skops-digits\",\"api_call\":\"load('path_to_folder/sklearn_model.joblib')\",\"api_arguments\":{\"activation\":\"relu\",\"alpha\":0.0001,\"batch_size\":\"auto\",\"beta_1\":0.9,\"beta_2\":0.999,\"early_stopping\":\"False\",\"epsilon\":1e-08,\"hidden_layer_sizes\":\"(100,)\",\"learning_rate\":\"constant\",\"learning_rate_init\":0.001,\"max_fun\":15000,\"max_iter\":200,\"momentum\":0.9,\"n_iter_no_change\":10,\"nesterovs_momentum\":\"True\",\"power_t\":0.5,\"random_state\":null,\"shuffle\":\"True\",\"solver\":\"adam\",\"tol\":0.0001,\"validation_fraction\":0.1,\"verbose\":\"False\",\"warm_start\":\"False\"},\"python_environment_requirements\":\"scikit-learn, joblib\",\"example_code\":\"This model can be loaded on the Inference API on-demand.\",\"performance\":{\"dataset\":null,\"accuracy\":null},\"description\":\"\u0646\u0645\u0648\u0630\u062c \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u0648\u0644\u064a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0625\u0637\u0627\u0631 \u0627\u0644\u0639\u0645\u0644 Scikit-learn \u0648\u0648\u0638\u064a\u0641\u0629 Joblib. \u064a\u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u062a\u0646\u0648\u0639\u0629 \u0645\u0646 \u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0645\u0647\u0627\u0645 \u0627\u0644\u062a\u0635\u0646\u064a\u0641.\"},\"output\":\"<<<domain>>>: \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u062c\u062f\u0648\u0644\u064a\\n<<<api_call>>>: load('\u0627\u0644\u0645\u0633\u0627\u0631_\u0625\u0644\u0649_\u0627\u0644\u0645\u062c\u0644\u062f/sklearn_model.joblib')\\n<<<api_provider>>>: Scikit-learn\\n<<<explanation>>>:1. \u0633\u0646\u0633\u062a\u062e\u062f\u0645 \u0646\u0645\u0648\u0630\u062c \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u0648\u0644\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 \u0645\u0646 Scikit-Learn \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631\u0629 \u0641\u064a \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.\\n2. \u064a\u0645\u0643\u0646 \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 `load` \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062d\u0632\u0645\u0629 joblib \u0648\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0645\u0633\u0627\u0631 \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c (\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629\u060c '\u0627\u0644\u0645\u0633\u0627\u0631_\u0625\u0644\u0649_\u0627\u0644\u0645\u062c\u0644\u062f/sklearn_model.joblib').\\n3. \u0628\u0645\u062c\u0631\u062f \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u060c \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u062c\u0631\u0627\u0621 \u062a\u0646\u0628\u0624\u0627\u062a \u0628\u0634\u0623\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u064a\u0632\u0627\u062a\u060c \u0645\u062b\u0644 \u0633\u0646\u0648\u0627\u062a \u0627\u0644\u062e\u0628\u0631\u0629\u060c \u0623\u0648 \u0627\u0644\u0645\u0633\u0645\u0649 \u0627\u0644\u0648\u0638\u064a\u0641\u064a\u060c \u0623\u0648 \u0627\u0644\u0645\u0648\u0642\u0639\u060c \u0648\u0627\u0644\u062a\u064a \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0628\u0639\u062f \u0630\u0644\u0643 \u0644\u062a\u0642\u062f\u064a\u0631 \u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629.\\n4. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0631\u0627\u062a\u0628 \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0643\u062c\u0632\u0621 \u0645\u0646 \u0645\u0646\u062a\u062c \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u0632\u0648\u064a\u062f \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0628\u062a\u0642\u062f\u064a\u0631 \u0644\u0644\u062f\u062e\u0644 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0644\u0642\u0627\u0626\u0645\u0629 \u0648\u0638\u0627\u0626\u0641 \u0645\u0639\u064a\u0646\u0629.\"}]}"
"{\"instruction\":\"\u0627\u0646\u0634\u0631 \u0639\u0646 \u0645\u0624\u0633\u0633\u062a\u0643\u0645 \u0627\u0644\u062a\u064a \u062a\u0642\u0648\u0645 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u0628\u062d\u062b \u0639\u0646 \u0627\u0644\u0648\u0638\u0627\u0626\u0641\",\"instances\":[{\"API\":{\"domain\":\"Tabular Tabular Classification\",\"framework\":\"Scikit-learn\",\"functionality\":\"Joblib\",\"api_name\":\"julien-c/skops-digits\",\"api_call\":\"load('path_to_folder/sklearn_model.joblib')\",\"api_arguments\":{\"activation\":\"relu\",\"alpha\":0.0001,\"batch_size\":\"auto\",\"beta_1\":0.9,\"beta_2\":0.999,\"early_stopping\":\"False\",\"epsilon\":1e-08,\"hidden_layer_sizes\":\"(100,)\",\"learning_rate\":\"constant\",\"learning_rate_init\":0.001,\"max_fun\":15000,\"max_iter\":200,\"momentum\":0.9,\"n_iter_no_change\":10,\"nesterovs_momentum\":\"True\",\"power_t\":0.5,\"random_state\":null,\"shuffle\":\"True\",\"solver\":\"adam\",\"tol\":0.0001,\"validation_fraction\":0.1,\"verbose\":\"False\",\"warm_start\":\"False\"},\"python_environment_requirements\":\"scikit-learn, joblib\",\"example_code\":\"This model can be loaded on the Inference API on-demand.\",\"performance\":{\"dataset\":null,\"accuracy\":null},\"description\":\"A tabular classification model using the Scikit-learn framework and Joblib functionality. The model is trained with various hyperparameters and can be used for classification tasks.\"},\"output\":\"<<<domain>>>: Tabular Tabular Classification\\n<<<api_call>>>: load('path_to_folder/sklearn_model.joblib')\\n<<<api_provider>>>: Scikit-learn\\n<<<explanation>>>:1. \u0633\u0646\u0633\u062a\u062e\u062f\u0645 \u0646\u0645\u0648\u0630\u062c \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u0648\u0644\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 \u0645\u0646 Scikit-Learn \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631\u0629 \u0641\u064a \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.\\n2. \u064a\u0645\u0643\u0646 \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 `load` \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062d\u0632\u0645\u0629 joblib \u0648\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0645\u0633\u0627\u0631 \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c (\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629\u060c 'path_to_folder/sklearn_model.joblib').\\n3. \u0628\u0645\u062c\u0631\u062f \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u060c \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u062c\u0631\u0627\u0621 \u062a\u0646\u0628\u0624\u0627\u062a \u0628\u0634\u0623\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u064a\u0632\u0627\u062a\u060c \u0645\u062b\u0644 \u0633\u0646\u0648\u0627\u062a \u0627\u0644\u062e\u0628\u0631\u0629\u060c \u0623\u0648 \u0627\u0644\u0645\u0633\u0645\u0649 \u0627\u0644\u0648\u0638\u064a\u0641\u064a\u060c \u0623\u0648 \u0627\u0644\u0645\u0648\u0642\u0639\u060c \u0648\u0627\u0644\u062a\u064a \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0628\u0639\u062f \u0630\u0644\u0643 \u0644\u062a\u0642\u062f\u064a\u0631 \u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629.\\n4. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0631\u0627\u062a\u0628 \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0643\u062c\u0632\u0621 \u0645\u0646 \u0645\u0646\u062a\u062c \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u0632\u0648\u064a\u062f \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0628\u062a\u0642\u062f\u064a\u0631 \u0644\u0644\u062f\u062e\u0644 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0644\u0642\u0627\u0626\u0645\u0629 \u0648\u0638\u0627\u0626\u0641 \u0645\u0639\u064a\u0646\u0629.\\n\"}]}"
"{\"instruction\":\"\u062a\u0648\u062c\u062f \u0637\u0644\u0628\u0627\u062a \u0645\u062a\u0639\u062f\u062f\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0623\u0645\u062b\u0644\u0629 \u062c\u062f\u064a\u062f\u0629 \u0644\u0648\u0627\u062c\u0647\u0629 \u0628\u0631\u0645\u062c\u0629 \u0627\u0644\u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u0645\u0628\u064a\u0646\u0629\u060c \u064a\u0631\u062c\u0649 \u062a\u0648\u0644\u064a\u062f \u0645\u062b\u0627\u0644 \u062c\u062f\u064a\u062f \u0628\u0646\u0641\u0633 \u0627\u0644\u0635\u064a\u063a\u0629:\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":,\"python_environment_requirements\":,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}"
"{\n    \"instruction\": \"\u0623\u0646\u062a\u0628\u0647 \u0625\u0644\u0649 \u0627\u0644\u0631\u062c\u0648\u0639 \u0625\u0644\u0649 \u062a\u0648\u062c\u064a\u0647\u0627\u062a \u0648\u0634\u0631\u0648\u062d\u0627\u062a \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0639\u0646\u062f \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Multimodal Text-to-Video\",\n                \"framework\": \"Hugging Face\",\n                \"functionality\": \"Text-to-Video\",\n                \"api_name\": \"chavinlo/TempoFunk\",\n                \"api_call\": \"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\n                \"python_environment_requirements\": [\n                    \"transformers\"\n                ],\n                \"example_code\": \"\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A Text-to-Video model using Hugging Face Transformers library. Model is capable of generating video content based on the input text.\"\n            },\n            \"output\": \"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0641\u064a\u062f\u064a\u0648 \u0641\u0639\u0644\u064a\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u0627 \u064a\u0645\u0643\u0646\u0647\u0627 \u0625\u0646\u0634\u0627\u0621 \u0645\u062e\u0631\u062c\u0627\u062a \u0628\u0635\u0631\u064a\u0629.\\n\"\n        },\n        {\n            \"API\": {\n                \"domain\": \"Reinforcement Learning\",\n                \"framework\": \"ML-Agents\",\n                \"functionality\": \"SoccerTwos\",\n                \"api_name\": \"Raiden-1001/poca-Soccerv7\",\n                \"api_call\": \"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\n                \"python_environment_requirements\": [\n                    \"unity-ml-agents\",\n                    \"deep-reinforcement-learning\",\n                    \"ML-Agents-SoccerTwos\"\n                ],\n                \"example_code\": \"Step 1: Write your model_id: Raiden-1001/poca-Soccerv7\\nStep 2: Select your .nn /.onnx file\\nClick on Watch the agent play \ud83d\udc40\",\n                \"performance\": {\n                    \"dataset\": \"SoccerTwos\",\n                    \"accuracy\": \"Not provided\"\n                },\n                \"description\": \"This is a trained model of a poca agent playing SoccerTwos using the Unity ML-Agents Library.\"\n            },\n            \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2.\u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4.\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\\n\"\n        },\n        {\n            \"API\": {\n                \"domain\": \"Natural Language Processing Text Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"lewtun/tiny-random-mt5\",\n                \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('Once upon a time...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random mt5 model for text generation\"\n            },\n            \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n        }\n    ]\n}"
"{\"instruction\":\"\u0623\u0646\u0634\u0626 \u062a\u0637\u0628\u064a\u0642\u064b\u0627 \u064a\u0633\u0627\u0639\u062f \u0639\u0644\u0649 \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644 \u0627\u0644\u0641\u0635\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a \u0645\u0646 \u0623\u062c\u0644 \u0627\u0644\u0637\u0644\u0627\u0628 \u0648\u0627\u0644\u0645\u062f\u0631\u0633\u064a\u0646. \u064a\u0645\u0643\u0646 \u0623\u0646 \u064a\u0634\u0645\u0644 \u0639\u0631\u0636 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0648\u0627\u0644\u0645\u0648\u0627\u0639\u064a\u062f \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u0629 \u0648\u062a\u0639\u064a\u064a\u0646 \u0627\u0644\u0645\u0647\u0627\u0645 \u0648\u0627\u0644\u0648\u0627\u062c\u0628\u0627\u062a.\",\"instances\":[{\"API\":{\"domain\":\"Education Scheduling\",\"framework\":\"SchedulerPlus\",\"functionality\":\"Class-Scheduling\",\"api_name\":\"SmartSchedule-2002/ClassPlus\",\"api_call\":\"scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\",\"api_arguments\":[\"class_info.json\",\"timetable.xlsx\"],\"python_environment_requirements\":[\"schedulerplus\",\"class-management\",\"timetableing\"],\"example_code\":\"Step 1: Enter class details in 'class_info.json' file\\nStep 2: Update the class timetable in 'timetable.xlsx'\\nStep 3: Run the command 'scheduler-create-class' to create the class schedule\\nStep 4: Access the timetable for viewing and managing classes\",\"performance\":{\"dataset\":\"ClassPlus\",\"accuracy\":\"Not provided\"},\"description\":\"This is a scheduling tool for educational institutions to manage class schedules and assignments effectively.\"},\"output\":\"<<<domain>>>: Education Scheduling\\n<<<api_call>>>: scheduler-create-class --class-details='class_info.json' --timetable='timetable.xlsx'\\n<<<api_provider>>>: SchedulerPlus\\n<<<explanation>>>: 1. \u0623\u062f\u062e\u0644 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0635\u0641 \u0641\u064a \u0645\u0644\u0641 'class_info.json'\\n2. \u0642\u0645 \u0628\u062a\u062d\u062f\u064a\u062b \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\u0648\u0641 \u0641\u064a 'timetable.xlsx'\\n3. \u0642\u0645 \u0628\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0623\u0645\u0631 'scheduler-create-class' \u0644\u0625\u0646\u0634\u0627\u0621 \u062c\u062f\u0648\u0644 \u0627\u0644\u0635\u0641\\n4. \u064a\u0645\u0643\u0646 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u0649 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u0632\u0645\u0646\u064a \u0644\u0639\u0631\u0636 \u0648\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0635\u0641\u0648\u0641\"}]}]}"
"{\"instruction\":\"\u064a\u0648\u062c\u062f \u0645\u0637\u0648\u0631 \u064a\u0639\u0645\u0644 \u0639\u0644\u0649 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629 \u0648\u064a\u062d\u062a\u0627\u062c \u0644\u062f\u0645\u062c \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0639\u0628\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c.\\n5. \u064a\u062c\u0628 \u0645\u0644\u0627\u062d\u0638\u0629 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633\u062a \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0627\u0644\u0645\u0631\u0626\u064a\u0629.\"}],\"domain\":\"\"}"
"{\"instruction\":\"\u0625\u0639\u062f\u0627\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c \u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0631\u0627\u062a\u0628 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Tabular Tabular Classification\",\"framework\":\"Scikit-learn\",\"functionality\":\"Joblib\",\"api_name\":\"julien-c/skops-digits\",\"api_call\":\"load('path_to_folder/sklearn_model.joblib')\",\"api_arguments\":{\"activation\":\"relu\",\"alpha\":0.0001,\"batch_size\":\"auto\",\"beta_1\":0.9,\"beta_2\":0.999,\"early_stopping\":\"False\",\"epsilon\":1e-08,\"hidden_layer_sizes\":\"(100,)\",\"learning_rate\":\"constant\",\"learning_rate_init\":0.001,\"max_fun\":15000,\"max_iter\":200,\"momentum\":0.9,\"n_iter_no_change\":10,\"nesterovs_momentum\":\"True\",\"power_t\":0.5,\"random_state\":null,\"shuffle\":\"True\",\"solver\":\"adam\",\"tol\":0.0001,\"validation_fraction\":0.1,\"verbose\":\"False\",\"warm_start\":\"False\"},\"python_environment_requirements\":\"scikit-learn, joblib\",\"example_code\":\"This model can be loaded on the Inference API on-demand.\",\"performance\":{\"dataset\":null,\"accuracy\":null},\"description\":\"\u0646\u0645\u0648\u0630\u062c \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u0648\u0644\u064a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0625\u0637\u0627\u0631 \u0627\u0644\u0639\u0645\u0644 Scikit-learn \u0648\u0648\u0638\u064a\u0641\u0629 Joblib. \u064a\u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062c\u0645\u0648\u0639\u0629 \u0645\u062a\u0646\u0648\u0639\u0629 \u0645\u0646 \u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0645\u0647\u0627\u0645 \u0627\u0644\u062a\u0635\u0646\u064a\u0641.\"},\"output\":\"<<<domain>>>: \u0627\u0644\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u062c\u062f\u0648\u0644\u064a\\n<<<api_call>>>: load('\u0627\u0644\u0645\u0633\u0627\u0631_\u0625\u0644\u0649_\u0627\u0644\u0645\u062c\u0644\u062f/sklearn_model.joblib')\\n<<<api_provider>>>: Scikit-learn\\n<<<explanation>>>:1. \u0633\u0646\u0633\u062a\u062e\u062f\u0645 \u0646\u0645\u0648\u0630\u062c \u062a\u0635\u0646\u064a\u0641 \u062c\u062f\u0648\u0644\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 \u0645\u0646 Scikit-Learn \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0645\u064a\u0632\u0627\u062a \u0627\u0644\u0645\u062a\u0648\u0641\u0631\u0629 \u0641\u064a \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a.\\n2. \u064a\u0645\u0643\u0646 \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 `load` \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062d\u0632\u0645\u0629 joblib \u0648\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0645\u0633\u0627\u0631 \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062e\u0632\u064a\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c (\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u062d\u0627\u0644\u0629\u060c '\u0627\u0644\u0645\u0633\u0627\u0631_\u0625\u0644\u0649_\u0627\u0644\u0645\u062c\u0644\u062f/sklearn_model.joblib').\\n3. \u0628\u0645\u062c\u0631\u062f \u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c\u060c \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u0625\u062c\u0631\u0627\u0621 \u062a\u0646\u0628\u0624\u0627\u062a \u0628\u0634\u0623\u0646 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u064a\u0632\u0627\u062a\u060c \u0645\u062b\u0644 \u0633\u0646\u0648\u0627\u062a \u0627\u0644\u062e\u0628\u0631\u0629\u060c \u0623\u0648 \u0627\u0644\u0645\u0633\u0645\u0649 \u0627\u0644\u0648\u0638\u064a\u0641\u064a\u060c \u0623\u0648 \u0627\u0644\u0645\u0648\u0642\u0639\u060c \u0648\u0627\u0644\u062a\u064a \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647\u0627 \u0628\u0639\u062f \u0630\u0644\u0643 \u0644\u062a\u0642\u062f\u064a\u0631 \u0631\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u064a\u0641\u0629.\\n4. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0631\u0627\u062a\u0628 \u0627\u0644\u0645\u062a\u0648\u0642\u0639 \u0643\u062c\u0632\u0621 \u0645\u0646 \u0645\u0646\u062a\u062c \u0627\u0644\u0628\u062d\u062b \u0639\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u0632\u0648\u064a\u062f \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0628\u062a\u0642\u062f\u064a\u0631 \u0644\u0644\u062f\u062e\u0644 \u0627\u0644\u0645\u062d\u062a\u0645\u0644 \u0644\u0642\u0627\u0626\u0645\u0629 \u0648\u0638\u0627\u0626\u0641 \u0645\u0639\u064a\u0646\u0629.\"}]}"
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A tiny random mt5 model for text generation\"\n                },\n                \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0648\u0641\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0642\u0631\u0649 \u0627\u0644\u0646\u0627\u0626\u064a\u0629\u060c \u0642\u0627\u0645 \u0639\u0627\u0644\u0645 \u0628\u0627\u0628\u062a\u0643\u0627\u0631 \u062c\u0647\u0627\u0632 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0642\u0639 \u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"CloudyPredictor\",\n                    \"api_name\": \"Raiko-204/cloudy-predictor-v2\",\n                    \"api_call\": \"mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\",\n                    \"api_arguments\": [\n                        \"your_configuration_file_path.yaml\",\n                        \"run_id\"\n                    ],\n                    \"python_environment_requirements\": [\n                        \"unity-ml-agents\",\n                        \"deep-reinforcement-learning\",\n                        \"ML-Agents-CloudyPredictor\"\n                    ],\n                    \"example_code\": \"Step 1: Write your model_id: Raiko-204/cloudy-predictor-v2\\nStep 2: Select your dataset file in .csv format\\nExecute the prediction and view the results \u2601\ufe0f\",\n                    \"performance\": {\n                        \"dataset\": \"Weather Samples\",\n                        \"accuracy\": \"Not provided\"\n                    },\n                    \"description\": \"A trained model of a CloudyPredictor agent predicting weather patterns using Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u062a\u0646\u0628\u0626 \\\"Raiko-204/cloudy-predictor-v2.1\\\" \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'weather_samples.csv'.\\n3. \u0633\u064a\u062a\u0639\u064a\u0646 \u0639\u0644\u064a\u0643 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u0644\u062a\u062d\u062f\u064a\u062f \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0646\u0628\u0624 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 CloudyPredictor.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-predict' \u0645\u0639 \u0645\u0644\u0641 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628 \u0628\u0634\u0643\u0644 \u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u062a\u0645\u062a\u0639 \u0628\u0645\u0634\u0627\u0647\u062f\u0629 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u2601\ufe0f\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0633\u0627\u0641\u0631 \u0627\u0644\u0645\u0647\u0646\u062f\u0633 \u064a\u0648\u0633\u0641 \u0625\u0644\u0649 \u0639\u0645\u0642 \u0627\u0644\u0628\u062d\u0627\u0631 \u0628\u063a\u0648\u0627\u0635\u0629 \u0645\u064f\u062c\u0647\u0632\u0629 \u0628\u0646\u0638\u0627\u0645 \u0631\u0624\u064a\u0629 \u0639\u0645\u064a\u0642 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Computer Vision Underwater Object Detection\",\n                    \"framework\": \"TensorFlow\",\n                    \"functionality\": \"UnderwaterObjectDetector\",\n                    \"api_name\": \"aquaman/underwater-detector\",\n                    \"api_call\": \"tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\",\n                    \"api_arguments\": [],\n                    \"python_environment_requirements\": [\n                        \"tensorflow\",\n                        \"object-detection\"\n                    ],\n                    \"example_code\": \"Step 1: Specify the model: aquaman/underwater-detector\\nStep 2: Input the image file of the underwater scene\\nExecute the detection algorithm and explore the identified creatures \ud83d\udc20\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A specialized detector for identifying underwater creatures using TensorFlow in marine environments.\"\n                },\n                \"output\": \"<<<domain>>>: Computer Vision Underwater Object Detection\\n<<<api_call>>>: tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0645\u062b\u0644 TensorFlow \u0648object-detection \u0641\u064a \u0628\u064a\u0626\u062a\u0643 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0628\u0627\u064a\u062b\u0648\u0646.\\n2. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0633\u062a\u0634\u0627\u0631\u064a 'aquaman/underwater-detector' \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0645\u0631 tfdetect. \u064a\u0633\u062a\u0644\u0632\u0645 \u0630\u0644\u0643 \u062a\u0648\u0641\u0631 \u0635\u0648\u0631\u0629 \u0644\u0644\u0645\u0634\u0647\u062f \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0625\u062c\u0631\u0627\u0621 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0627\u0644\u0643\u0634\u0641 \u0648\u0627\u0633\u062a\u0643\u0634\u0627\u0641 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0641\u0629 \ud83d\udc20\\n\"\n            }\n        ]\n    }\n]"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A tiny random mt5 model for text generation\"\n                },\n                \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0648\u0641\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0642\u0631\u0649 \u0627\u0644\u0646\u0627\u0626\u064a\u0629\u060c \u0642\u0627\u0645 \u0639\u0627\u0644\u0645 \u0628\u0627\u0628\u062a\u0643\u0627\u0631 \u062c\u0647\u0627\u0632 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0642\u0639 \u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"CloudyPredictor\",\n                    \"api_name\": \"Raiko-204/cloudy-predictor-v2\",\n                    \"api_call\": \"mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\",\n                    \"api_arguments\": [\n                        \"your_configuration_file_path.yaml\",\n                        \"run_id\"\n                    ],\n                    \"python_environment_requirements\": [\n                        \"unity-ml-agents\",\n                        \"deep-reinforcement-learning\",\n                        \"ML-Agents-CloudyPredictor\"\n                    ],\n                    \"example_code\": \"Step 1: Write your model_id: Raiko-204/cloudy-predictor-v2\\nStep 2: Select your dataset file in .csv format\\nExecute the prediction and view the results \u2601\ufe0f\",\n                    \"performance\": {\n                        \"dataset\": \"Weather Samples\",\n                        \"accuracy\": \"Not provided\"\n                    },\n                    \"description\": \"A trained model of a CloudyPredictor agent predicting weather patterns using Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u062a\u0646\u0628\u0626 \\\"Raiko-204/cloudy-predictor-v2.1\\\" \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'weather_samples.csv'.\\n3. \u0633\u064a\u062a\u0639\u064a\u0646 \u0639\u0644\u064a\u0643 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u0644\u062a\u062d\u062f\u064a\u062f \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0646\u0628\u0624 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 CloudyPredictor.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-predict' \u0645\u0639 \u0645\u0644\u0641 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628 \u0628\u0634\u0643\u0644 \u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u062a\u0645\u062a\u0639 \u0628\u0645\u0634\u0627\u0647\u062f\u0629 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u2601\ufe0f\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0633\u0627\u0641\u0631 \u0627\u0644\u0645\u0647\u0646\u062f\u0633 \u064a\u0648\u0633\u0641 \u0625\u0644\u0649 \u0639\u0645\u0642 \u0627\u0644\u0628\u062d\u0627\u0631 \u0628\u063a\u0648\u0627\u0635\u0629 \u0645\u064f\u062c\u0647\u0632\u0629 \u0628\u0646\u0638\u0627\u0645 \u0631\u0624\u064a\u0629 \u0639\u0645\u064a\u0642 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Computer Vision Underwater Object Detection\",\n                    \"framework\": \"TensorFlow\",\n                    \"functionality\": \"UnderwaterObjectDetector\",\n                    \"api_name\": \"aquaman/underwater-detector\",\n                    \"api_call\": \"tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\",\n                    \"api_arguments\": [],\n                    \"python_environment_requirements\": [\n                        \"tensorflow\",\n                        \"object-detection\"\n                    ],\n                    \"example_code\": \"Step 1: Specify the model: aquaman/underwater-detector\\nStep 2: Input the image file of the underwater scene\\nExecute the detection algorithm and explore the identified creatures \ud83d\udc20\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A specialized detector for identifying underwater creatures using TensorFlow in marine environments.\"\n                },\n                \"output\": \"<<<domain>>>: Computer Vision Underwater Object Detection\\n<<<api_call>>>: tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0645\u062b\u0644 TensorFlow \u0648object-detection \u0641\u064a \u0628\u064a\u0626\u062a\u0643 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0628\u0627\u064a\u062b\u0648\u0646.\\n2. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0633\u062a\u0634\u0627\u0631\u064a 'aquaman/underwater-detector' \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0645\u0631 tfdetect. \u064a\u0633\u062a\u0644\u0632\u0645 \u0630\u0644\u0643 \u062a\u0648\u0641\u0631 \u0635\u0648\u0631\u0629 \u0644\u0644\u0645\u0634\u0647\u062f \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0625\u062c\u0631\u0627\u0621 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0627\u0644\u0643\u0634\u0641 \u0648\u0627\u0633\u062a\u0643\u0634\u0627\u0641 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0641\u0629 \ud83d\udc20\\n\"\n            }\n        ]\n    }\n]", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c MT5 \u0639\u0634\u0648\u0627\u0626\u064a \u0635\u063a\u064a\u0631 \u0644\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635\u0648\u0635.\"\n                },\n                \"output\": \"<<<domain>>>: \u0645\u0648\u0644\u062f \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0644\u063a\u0648\u064a\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062d\u0645\u0644.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0645\u0634\u0647\u062f \u0641\u064a\u062f\u064a\u0648 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0648\u0635\u0641 \u0646\u0635\u064a. \u0646\u0631\u064a\u062f \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0627 \u0627\u0644\u0648\u0635\u0641 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648\u060c \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629\u061f\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Multimodal Text-to-Video\",\n                    \"framework\": \"Hugging Face\",\n                    \"functionality\": \"Text-to-Video\",\n                    \"api_name\": \"chavinlo/TempoFunk\",\n                    \"api_call\": \"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\n                    \"api_arguments\": [\"input_text\"],\n                    \"python_environment_requirements\": [\"transformers\"],\n                    \"example_code\": \"\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"\n                },\n                \"output\": \"<<<domain>>>: \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0648\u0633\u0627\u0626\u0637\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a\u064b\u0627.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0646\u062d\u0646 \u0646\u0645\u0644\u0643 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u0644\u062a\u0642\u0648\u0646 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u064a\u0644\u0639\u0628\u0648\u0627 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0633\u0627\u0639\u062f\u0647\u0645 \u0639\u0644\u0649 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"SoccerTwos\",\n                    \"api_name\": \"Raiden-1001/poca-Soccerv7\",\n                    \"api_call\": \"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\n                    \"api_arguments\": [\"your_configuration_file_path.yaml\", \"run_id\"],\n                    \"python_environment_requirements\": [\"unity-ml-agents\", \"deep-reinforcement-learning\", \"ML-Agents-SoccerTwos\"],\n                    \"example_code\": \"Step 1: \u0627\u0643\u062a\u0628 model_id \u0627\u0644\u062e\u0627\u0635 \u0628\u0643: Raiden-1001/poca-Soccerv7\\nStep 2: \u062d\u062f\u062f \u0645\u0644\u0641\u0643 .nn/.onnx\\n\u0627\u0646\u0642\u0631 \u0639\u0644\u0649 \u0634\u0627\u0647\u062f \u0627\u0644\u0648\u0643\u064a\u0644 \u064a\u0644\u0639\u0628 \ud83d\udc40\",\n                    \"performance\": {\n                        \"dataset\": \"SoccerTwos\",\n                        \"accuracy\": \"\u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0631\"\n                    },\n                    \"description\": \"\u0647\u0630\u0627 \u0647\u0648 \u0646\u0645\u0648\u0630\u062c \u062a\u062f\u0631\u064a\u0628 \u0648\u0643\u064a\u0644 poca \u064a\u0644\u0639\u0628 \u0644\u0639\u0628\u0629 SoccerTwos \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0642\u0648\u064a\u0645\u064a\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1. \u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\"\n            }\n        ]\n    }\n]\n```"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A tiny random mt5 model for text generation\"\n                },\n                \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0648\u0641\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0642\u0631\u0649 \u0627\u0644\u0646\u0627\u0626\u064a\u0629\u060c \u0642\u0627\u0645 \u0639\u0627\u0644\u0645 \u0628\u0627\u0628\u062a\u0643\u0627\u0631 \u062c\u0647\u0627\u0632 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0642\u0639 \u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"CloudyPredictor\",\n                    \"api_name\": \"Raiko-204/cloudy-predictor-v2\",\n                    \"api_call\": \"mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\",\n                    \"api_arguments\": [\n                        \"your_configuration_file_path.yaml\",\n                        \"run_id\"\n                    ],\n                    \"python_environment_requirements\": [\n                        \"unity-ml-agents\",\n                        \"deep-reinforcement-learning\",\n                        \"ML-Agents-CloudyPredictor\"\n                    ],\n                    \"example_code\": \"Step 1: Write your model_id: Raiko-204/cloudy-predictor-v2\\nStep 2: Select your dataset file in .csv format\\nExecute the prediction and view the results \u2601\ufe0f\",\n                    \"performance\": {\n                        \"dataset\": \"Weather Samples\",\n                        \"accuracy\": \"Not provided\"\n                    },\n                    \"description\": \"A trained model of a CloudyPredictor agent predicting weather patterns using Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u062a\u0646\u0628\u0626 \\\"Raiko-204/cloudy-predictor-v2.1\\\" \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'weather_samples.csv'.\\n3. \u0633\u064a\u062a\u0639\u064a\u0646 \u0639\u0644\u064a\u0643 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u0644\u062a\u062d\u062f\u064a\u062f \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0646\u0628\u0624 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 CloudyPredictor.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-predict' \u0645\u0639 \u0645\u0644\u0641 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628 \u0628\u0634\u0643\u0644 \u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u062a\u0645\u062a\u0639 \u0628\u0645\u0634\u0627\u0647\u062f\u0629 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u2601\ufe0f\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0633\u0627\u0641\u0631 \u0627\u0644\u0645\u0647\u0646\u062f\u0633 \u064a\u0648\u0633\u0641 \u0625\u0644\u0649 \u0639\u0645\u0642 \u0627\u0644\u0628\u062d\u0627\u0631 \u0628\u063a\u0648\u0627\u0635\u0629 \u0645\u064f\u062c\u0647\u0632\u0629 \u0628\u0646\u0638\u0627\u0645 \u0631\u0624\u064a\u0629 \u0639\u0645\u064a\u0642 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Computer Vision Underwater Object Detection\",\n                    \"framework\": \"TensorFlow\",\n                    \"functionality\": \"UnderwaterObjectDetector\",\n                    \"api_name\": \"aquaman/underwater-detector\",\n                    \"api_call\": \"tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\",\n                    \"api_arguments\": [],\n                    \"python_environment_requirements\": [\n                        \"tensorflow\",\n                        \"object-detection\"\n                    ],\n                    \"example_code\": \"Step 1: Specify the model: aquaman/underwater-detector\\nStep 2: Input the image file of the underwater scene\\nExecute the detection algorithm and explore the identified creatures \ud83d\udc20\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A specialized detector for identifying underwater creatures using TensorFlow in marine environments.\"\n                },\n                \"output\": \"<<<domain>>>: Computer Vision Underwater Object Detection\\n<<<api_call>>>: tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0645\u062b\u0644 TensorFlow \u0648object-detection \u0641\u064a \u0628\u064a\u0626\u062a\u0643 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0628\u0627\u064a\u062b\u0648\u0646.\\n2. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0633\u062a\u0634\u0627\u0631\u064a 'aquaman/underwater-detector' \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0645\u0631 tfdetect. \u064a\u0633\u062a\u0644\u0632\u0645 \u0630\u0644\u0643 \u062a\u0648\u0641\u0631 \u0635\u0648\u0631\u0629 \u0644\u0644\u0645\u0634\u0647\u062f \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0625\u062c\u0631\u0627\u0621 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0627\u0644\u0643\u0634\u0641 \u0648\u0627\u0633\u062a\u0643\u0634\u0627\u0641 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0641\u0629 \ud83d\udc20\\n\"\n            }\n        ]\n    }\n]", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c MT5 \u0639\u0634\u0648\u0627\u0626\u064a \u0635\u063a\u064a\u0631 \u0644\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635\u0648\u0635.\"\n                },\n                \"output\": \"<<<domain>>>: \u0645\u0648\u0644\u062f \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0644\u063a\u0648\u064a\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062d\u0645\u0644.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0645\u0634\u0647\u062f \u0641\u064a\u062f\u064a\u0648 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0648\u0635\u0641 \u0646\u0635\u064a. \u0646\u0631\u064a\u062f \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0627 \u0627\u0644\u0648\u0635\u0641 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648\u060c \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629\u061f\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Multimodal Text-to-Video\",\n                    \"framework\": \"Hugging Face\",\n                    \"functionality\": \"Text-to-Video\",\n                    \"api_name\": \"chavinlo/TempoFunk\",\n                    \"api_call\": \"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\n                    \"api_arguments\": [\"input_text\"],\n                    \"python_environment_requirements\": [\"transformers\"],\n                    \"example_code\": \"\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"\n                },\n                \"output\": \"<<<domain>>>: \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0648\u0633\u0627\u0626\u0637\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a\u064b\u0627.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0646\u062d\u0646 \u0646\u0645\u0644\u0643 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u0644\u062a\u0642\u0648\u0646 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u064a\u0644\u0639\u0628\u0648\u0627 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0633\u0627\u0639\u062f\u0647\u0645 \u0639\u0644\u0649 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"SoccerTwos\",\n                    \"api_name\": \"Raiden-1001/poca-Soccerv7\",\n                    \"api_call\": \"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\n                    \"api_arguments\": [\"your_configuration_file_path.yaml\", \"run_id\"],\n                    \"python_environment_requirements\": [\"unity-ml-agents\", \"deep-reinforcement-learning\", \"ML-Agents-SoccerTwos\"],\n                    \"example_code\": \"Step 1: \u0627\u0643\u062a\u0628 model_id \u0627\u0644\u062e\u0627\u0635 \u0628\u0643: Raiden-1001/poca-Soccerv7\\nStep 2: \u062d\u062f\u062f \u0645\u0644\u0641\u0643 .nn/.onnx\\n\u0627\u0646\u0642\u0631 \u0639\u0644\u0649 \u0634\u0627\u0647\u062f \u0627\u0644\u0648\u0643\u064a\u0644 \u064a\u0644\u0639\u0628 \ud83d\udc40\",\n                    \"performance\": {\n                        \"dataset\": \"SoccerTwos\",\n                        \"accuracy\": \"\u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0631\"\n                    },\n                    \"description\": \"\u0647\u0630\u0627 \u0647\u0648 \u0646\u0645\u0648\u0630\u062c \u062a\u062f\u0631\u064a\u0628 \u0648\u0643\u064a\u0644 poca \u064a\u0644\u0639\u0628 \u0644\u0639\u0628\u0629 SoccerTwos \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0642\u0648\u064a\u0645\u064a\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1. \u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\"\n            }\n        ]\n    }\n]\n```", "{\"instruction\":\"\u0646\u0642\u0648\u0645 \u0628\u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u062a\u0648\u0627\u0635\u0644 \u0627\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u064a \u0648\u0646\u0631\u064a\u062f \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u062d\u0644\u064a\u0644 \u0645\u0634\u0627\u0639\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0627\u0644\u0646\u0635\u064a\u0629 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"NLP Sentiment Analysis\",\"framework\":\"Hugging Face\",\"functionality\":\"Sentiment Analysis\",\"api_name\":\"nlpcraft/sentiment-analysis\",\"api_call\":\"pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\",\"api_arguments\":\"text\",\"python_environment_requirements\":[\"transformers\",\"huggingface\"],\"example_code\":\"from transformers import pipeline\\nnlp = pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\nresult = nlp('I love this product')\\nprint(result)\",\"performance\":{\"dataset\":\"Custom dataset\",\"accuracy\":\"Not specified\"},\"description\":\"A sentiment analysis model trained for text analysis using the Hugging Face framework. This model can classify text into positive, negative, or neutral sentiment categories.\"},\"output\":\"<<<domain>>>: NLP Sentiment Analysis\\n<<<api_call>>>: pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u0623\u0646\u0634\u0626 pipeline \u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0645\u0646 \u0627\u0644\u0646\u0635 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0639\u062a\u0645\u062f 'nlpcraft/sentiment-analysis'. \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u062d\u0644\u064a\u0644 \u0648\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0641\u064a \u0627\u0644\u0646\u0635\u0648\u0635.\\n3. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0635. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u0641\u0627\u0639\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646.\"}]}"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A tiny random mt5 model for text generation\"\n                },\n                \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0648\u0641\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0642\u0631\u0649 \u0627\u0644\u0646\u0627\u0626\u064a\u0629\u060c \u0642\u0627\u0645 \u0639\u0627\u0644\u0645 \u0628\u0627\u0628\u062a\u0643\u0627\u0631 \u062c\u0647\u0627\u0632 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0642\u0639 \u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"CloudyPredictor\",\n                    \"api_name\": \"Raiko-204/cloudy-predictor-v2\",\n                    \"api_call\": \"mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\",\n                    \"api_arguments\": [\n                        \"your_configuration_file_path.yaml\",\n                        \"run_id\"\n                    ],\n                    \"python_environment_requirements\": [\n                        \"unity-ml-agents\",\n                        \"deep-reinforcement-learning\",\n                        \"ML-Agents-CloudyPredictor\"\n                    ],\n                    \"example_code\": \"Step 1: Write your model_id: Raiko-204/cloudy-predictor-v2\\nStep 2: Select your dataset file in .csv format\\nExecute the prediction and view the results \u2601\ufe0f\",\n                    \"performance\": {\n                        \"dataset\": \"Weather Samples\",\n                        \"accuracy\": \"Not provided\"\n                    },\n                    \"description\": \"A trained model of a CloudyPredictor agent predicting weather patterns using Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u062a\u0646\u0628\u0626 \\\"Raiko-204/cloudy-predictor-v2.1\\\" \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'weather_samples.csv'.\\n3. \u0633\u064a\u062a\u0639\u064a\u0646 \u0639\u0644\u064a\u0643 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u0644\u062a\u062d\u062f\u064a\u062f \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0646\u0628\u0624 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 CloudyPredictor.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-predict' \u0645\u0639 \u0645\u0644\u0641 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628 \u0628\u0634\u0643\u0644 \u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u062a\u0645\u062a\u0639 \u0628\u0645\u0634\u0627\u0647\u062f\u0629 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u2601\ufe0f\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0633\u0627\u0641\u0631 \u0627\u0644\u0645\u0647\u0646\u062f\u0633 \u064a\u0648\u0633\u0641 \u0625\u0644\u0649 \u0639\u0645\u0642 \u0627\u0644\u0628\u062d\u0627\u0631 \u0628\u063a\u0648\u0627\u0635\u0629 \u0645\u064f\u062c\u0647\u0632\u0629 \u0628\u0646\u0638\u0627\u0645 \u0631\u0624\u064a\u0629 \u0639\u0645\u064a\u0642 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Computer Vision Underwater Object Detection\",\n                    \"framework\": \"TensorFlow\",\n                    \"functionality\": \"UnderwaterObjectDetector\",\n                    \"api_name\": \"aquaman/underwater-detector\",\n                    \"api_call\": \"tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\",\n                    \"api_arguments\": [],\n                    \"python_environment_requirements\": [\n                        \"tensorflow\",\n                        \"object-detection\"\n                    ],\n                    \"example_code\": \"Step 1: Specify the model: aquaman/underwater-detector\\nStep 2: Input the image file of the underwater scene\\nExecute the detection algorithm and explore the identified creatures \ud83d\udc20\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A specialized detector for identifying underwater creatures using TensorFlow in marine environments.\"\n                },\n                \"output\": \"<<<domain>>>: Computer Vision Underwater Object Detection\\n<<<api_call>>>: tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0645\u062b\u0644 TensorFlow \u0648object-detection \u0641\u064a \u0628\u064a\u0626\u062a\u0643 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0628\u0627\u064a\u062b\u0648\u0646.\\n2. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0633\u062a\u0634\u0627\u0631\u064a 'aquaman/underwater-detector' \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0645\u0631 tfdetect. \u064a\u0633\u062a\u0644\u0632\u0645 \u0630\u0644\u0643 \u062a\u0648\u0641\u0631 \u0635\u0648\u0631\u0629 \u0644\u0644\u0645\u0634\u0647\u062f \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0625\u062c\u0631\u0627\u0621 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0627\u0644\u0643\u0634\u0641 \u0648\u0627\u0633\u062a\u0643\u0634\u0627\u0641 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0641\u0629 \ud83d\udc20\\n\"\n            }\n        ]\n    }\n]", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c MT5 \u0639\u0634\u0648\u0627\u0626\u064a \u0635\u063a\u064a\u0631 \u0644\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635\u0648\u0635.\"\n                },\n                \"output\": \"<<<domain>>>: \u0645\u0648\u0644\u062f \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0644\u063a\u0648\u064a\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062d\u0645\u0644.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0645\u0634\u0647\u062f \u0641\u064a\u062f\u064a\u0648 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0648\u0635\u0641 \u0646\u0635\u064a. \u0646\u0631\u064a\u062f \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0627 \u0627\u0644\u0648\u0635\u0641 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648\u060c \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629\u061f\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Multimodal Text-to-Video\",\n                    \"framework\": \"Hugging Face\",\n                    \"functionality\": \"Text-to-Video\",\n                    \"api_name\": \"chavinlo/TempoFunk\",\n                    \"api_call\": \"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\n                    \"api_arguments\": [\"input_text\"],\n                    \"python_environment_requirements\": [\"transformers\"],\n                    \"example_code\": \"\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"\n                },\n                \"output\": \"<<<domain>>>: \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0648\u0633\u0627\u0626\u0637\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a\u064b\u0627.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0646\u062d\u0646 \u0646\u0645\u0644\u0643 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u0644\u062a\u0642\u0648\u0646 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u064a\u0644\u0639\u0628\u0648\u0627 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0633\u0627\u0639\u062f\u0647\u0645 \u0639\u0644\u0649 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"SoccerTwos\",\n                    \"api_name\": \"Raiden-1001/poca-Soccerv7\",\n                    \"api_call\": \"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\n                    \"api_arguments\": [\"your_configuration_file_path.yaml\", \"run_id\"],\n                    \"python_environment_requirements\": [\"unity-ml-agents\", \"deep-reinforcement-learning\", \"ML-Agents-SoccerTwos\"],\n                    \"example_code\": \"Step 1: \u0627\u0643\u062a\u0628 model_id \u0627\u0644\u062e\u0627\u0635 \u0628\u0643: Raiden-1001/poca-Soccerv7\\nStep 2: \u062d\u062f\u062f \u0645\u0644\u0641\u0643 .nn/.onnx\\n\u0627\u0646\u0642\u0631 \u0639\u0644\u0649 \u0634\u0627\u0647\u062f \u0627\u0644\u0648\u0643\u064a\u0644 \u064a\u0644\u0639\u0628 \ud83d\udc40\",\n                    \"performance\": {\n                        \"dataset\": \"SoccerTwos\",\n                        \"accuracy\": \"\u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0631\"\n                    },\n                    \"description\": \"\u0647\u0630\u0627 \u0647\u0648 \u0646\u0645\u0648\u0630\u062c \u062a\u062f\u0631\u064a\u0628 \u0648\u0643\u064a\u0644 poca \u064a\u0644\u0639\u0628 \u0644\u0639\u0628\u0629 SoccerTwos \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0642\u0648\u064a\u0645\u064a\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1. \u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\"\n            }\n        ]\n    }\n]\n```", "{\"instruction\":\"\u0646\u0642\u0648\u0645 \u0628\u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u062a\u0648\u0627\u0635\u0644 \u0627\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u064a \u0648\u0646\u0631\u064a\u062f \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u062d\u0644\u064a\u0644 \u0645\u0634\u0627\u0639\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0627\u0644\u0646\u0635\u064a\u0629 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"NLP Sentiment Analysis\",\"framework\":\"Hugging Face\",\"functionality\":\"Sentiment Analysis\",\"api_name\":\"nlpcraft/sentiment-analysis\",\"api_call\":\"pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\",\"api_arguments\":\"text\",\"python_environment_requirements\":[\"transformers\",\"huggingface\"],\"example_code\":\"from transformers import pipeline\\nnlp = pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\nresult = nlp('I love this product')\\nprint(result)\",\"performance\":{\"dataset\":\"Custom dataset\",\"accuracy\":\"Not specified\"},\"description\":\"A sentiment analysis model trained for text analysis using the Hugging Face framework. This model can classify text into positive, negative, or neutral sentiment categories.\"},\"output\":\"<<<domain>>>: NLP Sentiment Analysis\\n<<<api_call>>>: pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u0623\u0646\u0634\u0626 pipeline \u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0645\u0646 \u0627\u0644\u0646\u0635 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0639\u062a\u0645\u062f 'nlpcraft/sentiment-analysis'. \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u062d\u0644\u064a\u0644 \u0648\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0641\u064a \u0627\u0644\u0646\u0635\u0648\u0635.\\n3. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0635. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u0641\u0627\u0639\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646.\"}]}", "{\"instruction\":\"\u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0648\u0632\u064a\u0627\u062f\u0629 \u0645\u0628\u064a\u0639\u0627\u062a \u0627\u0644\u0645\u062a\u062c\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Machine Learning\",\"framework\":\"TensorFlow\",\"functionality\":\"Recommendation System\",\"api_name\":\"dmonn/recsys-v2\",\"api_call\":\"train_recommendation_model('dataset.csv', 'user_id', 'item_id')\",\"api_arguments\":[\"path_to_dataset.csv\", \"user_id_column\", \"item_id_column\"],\"python_environment_requirements\":[\"tensorflow\", \"pandas\"], \"example_code\":\"import tensorflow as tf\\nimport pandas as pd\\n# Load dataset\\ndataset = pd.read_csv('dataset.csv')\\n# Train recommendation model\\ntrain_recommendation_model(dataset, 'user_id', 'item_id')\",\"performance\":{\"dataset\":\"Retail Sales Data\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Recommendation System model built using TensorFlow framework for improving the online shopping experience and boosting store sales based on historical user-item interactions.\"},\"output\":\"<<<domain>>>: Machine Learning\\n<<<api_call>>>: train_recommendation_model('dataset.csv', 'user_id', 'item_id')\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062a\u0627\u0631\u064a\u062e \u062a\u0641\u0627\u0639\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0645\u0639 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0645\u0646 \u0645\u0644\u0641 'dataset.csv'.\\n2. \u064a\u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0646\u0645\u0648\u0630\u062c \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 'train_recommendation_model' \u0627\u0644\u062a\u064a \u064a\u062a\u0645 \u062a\u0645\u0631\u064a\u0631\u0647\u0627 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0623\u0639\u0645\u062f\u0629 \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u0644\u0639\u0646\u0635\u0631.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0645\u0646\u062a\u062c\u0627\u062a \u0645\u062d\u062f\u062f\u0629 \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0633\u062c\u0644\u0627\u062a \u062a\u0641\u0627\u0639\u0644\u0647\u0645 \u0627\u0644\u0633\u0627\u0628\u0642\u0629\u060c \u0645\u0645\u0627 \u064a\u0632\u064a\u062f \u0645\u0646 \u0641\u0631\u0635 \u0627\u0644\u0634\u0631\u0627\u0621 \u0648\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a.\"}]}"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A tiny random mt5 model for text generation\"\n                },\n                \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0648\u0641\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0642\u0631\u0649 \u0627\u0644\u0646\u0627\u0626\u064a\u0629\u060c \u0642\u0627\u0645 \u0639\u0627\u0644\u0645 \u0628\u0627\u0628\u062a\u0643\u0627\u0631 \u062c\u0647\u0627\u0632 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0642\u0639 \u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"CloudyPredictor\",\n                    \"api_name\": \"Raiko-204/cloudy-predictor-v2\",\n                    \"api_call\": \"mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\",\n                    \"api_arguments\": [\n                        \"your_configuration_file_path.yaml\",\n                        \"run_id\"\n                    ],\n                    \"python_environment_requirements\": [\n                        \"unity-ml-agents\",\n                        \"deep-reinforcement-learning\",\n                        \"ML-Agents-CloudyPredictor\"\n                    ],\n                    \"example_code\": \"Step 1: Write your model_id: Raiko-204/cloudy-predictor-v2\\nStep 2: Select your dataset file in .csv format\\nExecute the prediction and view the results \u2601\ufe0f\",\n                    \"performance\": {\n                        \"dataset\": \"Weather Samples\",\n                        \"accuracy\": \"Not provided\"\n                    },\n                    \"description\": \"A trained model of a CloudyPredictor agent predicting weather patterns using Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u062a\u0646\u0628\u0626 \\\"Raiko-204/cloudy-predictor-v2.1\\\" \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'weather_samples.csv'.\\n3. \u0633\u064a\u062a\u0639\u064a\u0646 \u0639\u0644\u064a\u0643 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u0644\u062a\u062d\u062f\u064a\u062f \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0646\u0628\u0624 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 CloudyPredictor.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-predict' \u0645\u0639 \u0645\u0644\u0641 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628 \u0628\u0634\u0643\u0644 \u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u062a\u0645\u062a\u0639 \u0628\u0645\u0634\u0627\u0647\u062f\u0629 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u2601\ufe0f\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0633\u0627\u0641\u0631 \u0627\u0644\u0645\u0647\u0646\u062f\u0633 \u064a\u0648\u0633\u0641 \u0625\u0644\u0649 \u0639\u0645\u0642 \u0627\u0644\u0628\u062d\u0627\u0631 \u0628\u063a\u0648\u0627\u0635\u0629 \u0645\u064f\u062c\u0647\u0632\u0629 \u0628\u0646\u0638\u0627\u0645 \u0631\u0624\u064a\u0629 \u0639\u0645\u064a\u0642 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Computer Vision Underwater Object Detection\",\n                    \"framework\": \"TensorFlow\",\n                    \"functionality\": \"UnderwaterObjectDetector\",\n                    \"api_name\": \"aquaman/underwater-detector\",\n                    \"api_call\": \"tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\",\n                    \"api_arguments\": [],\n                    \"python_environment_requirements\": [\n                        \"tensorflow\",\n                        \"object-detection\"\n                    ],\n                    \"example_code\": \"Step 1: Specify the model: aquaman/underwater-detector\\nStep 2: Input the image file of the underwater scene\\nExecute the detection algorithm and explore the identified creatures \ud83d\udc20\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A specialized detector for identifying underwater creatures using TensorFlow in marine environments.\"\n                },\n                \"output\": \"<<<domain>>>: Computer Vision Underwater Object Detection\\n<<<api_call>>>: tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0645\u062b\u0644 TensorFlow \u0648object-detection \u0641\u064a \u0628\u064a\u0626\u062a\u0643 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0628\u0627\u064a\u062b\u0648\u0646.\\n2. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0633\u062a\u0634\u0627\u0631\u064a 'aquaman/underwater-detector' \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0645\u0631 tfdetect. \u064a\u0633\u062a\u0644\u0632\u0645 \u0630\u0644\u0643 \u062a\u0648\u0641\u0631 \u0635\u0648\u0631\u0629 \u0644\u0644\u0645\u0634\u0647\u062f \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0625\u062c\u0631\u0627\u0621 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0627\u0644\u0643\u0634\u0641 \u0648\u0627\u0633\u062a\u0643\u0634\u0627\u0641 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0641\u0629 \ud83d\udc20\\n\"\n            }\n        ]\n    }\n]", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c MT5 \u0639\u0634\u0648\u0627\u0626\u064a \u0635\u063a\u064a\u0631 \u0644\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635\u0648\u0635.\"\n                },\n                \"output\": \"<<<domain>>>: \u0645\u0648\u0644\u062f \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0644\u063a\u0648\u064a\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062d\u0645\u0644.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0645\u0634\u0647\u062f \u0641\u064a\u062f\u064a\u0648 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0648\u0635\u0641 \u0646\u0635\u064a. \u0646\u0631\u064a\u062f \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0627 \u0627\u0644\u0648\u0635\u0641 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648\u060c \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629\u061f\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Multimodal Text-to-Video\",\n                    \"framework\": \"Hugging Face\",\n                    \"functionality\": \"Text-to-Video\",\n                    \"api_name\": \"chavinlo/TempoFunk\",\n                    \"api_call\": \"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\n                    \"api_arguments\": [\"input_text\"],\n                    \"python_environment_requirements\": [\"transformers\"],\n                    \"example_code\": \"\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"\n                },\n                \"output\": \"<<<domain>>>: \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0648\u0633\u0627\u0626\u0637\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a\u064b\u0627.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0646\u062d\u0646 \u0646\u0645\u0644\u0643 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u0644\u062a\u0642\u0648\u0646 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u064a\u0644\u0639\u0628\u0648\u0627 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0633\u0627\u0639\u062f\u0647\u0645 \u0639\u0644\u0649 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"SoccerTwos\",\n                    \"api_name\": \"Raiden-1001/poca-Soccerv7\",\n                    \"api_call\": \"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\n                    \"api_arguments\": [\"your_configuration_file_path.yaml\", \"run_id\"],\n                    \"python_environment_requirements\": [\"unity-ml-agents\", \"deep-reinforcement-learning\", \"ML-Agents-SoccerTwos\"],\n                    \"example_code\": \"Step 1: \u0627\u0643\u062a\u0628 model_id \u0627\u0644\u062e\u0627\u0635 \u0628\u0643: Raiden-1001/poca-Soccerv7\\nStep 2: \u062d\u062f\u062f \u0645\u0644\u0641\u0643 .nn/.onnx\\n\u0627\u0646\u0642\u0631 \u0639\u0644\u0649 \u0634\u0627\u0647\u062f \u0627\u0644\u0648\u0643\u064a\u0644 \u064a\u0644\u0639\u0628 \ud83d\udc40\",\n                    \"performance\": {\n                        \"dataset\": \"SoccerTwos\",\n                        \"accuracy\": \"\u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0631\"\n                    },\n                    \"description\": \"\u0647\u0630\u0627 \u0647\u0648 \u0646\u0645\u0648\u0630\u062c \u062a\u062f\u0631\u064a\u0628 \u0648\u0643\u064a\u0644 poca \u064a\u0644\u0639\u0628 \u0644\u0639\u0628\u0629 SoccerTwos \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0642\u0648\u064a\u0645\u064a\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1. \u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\"\n            }\n        ]\n    }\n]\n```", "{\"instruction\":\"\u0646\u0642\u0648\u0645 \u0628\u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u062a\u0648\u0627\u0635\u0644 \u0627\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u064a \u0648\u0646\u0631\u064a\u062f \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u062d\u0644\u064a\u0644 \u0645\u0634\u0627\u0639\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0627\u0644\u0646\u0635\u064a\u0629 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"NLP Sentiment Analysis\",\"framework\":\"Hugging Face\",\"functionality\":\"Sentiment Analysis\",\"api_name\":\"nlpcraft/sentiment-analysis\",\"api_call\":\"pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\",\"api_arguments\":\"text\",\"python_environment_requirements\":[\"transformers\",\"huggingface\"],\"example_code\":\"from transformers import pipeline\\nnlp = pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\nresult = nlp('I love this product')\\nprint(result)\",\"performance\":{\"dataset\":\"Custom dataset\",\"accuracy\":\"Not specified\"},\"description\":\"A sentiment analysis model trained for text analysis using the Hugging Face framework. This model can classify text into positive, negative, or neutral sentiment categories.\"},\"output\":\"<<<domain>>>: NLP Sentiment Analysis\\n<<<api_call>>>: pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u0623\u0646\u0634\u0626 pipeline \u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0645\u0646 \u0627\u0644\u0646\u0635 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0639\u062a\u0645\u062f 'nlpcraft/sentiment-analysis'. \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u062d\u0644\u064a\u0644 \u0648\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0641\u064a \u0627\u0644\u0646\u0635\u0648\u0635.\\n3. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0635. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u0641\u0627\u0639\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646.\"}]}", "{\"instruction\":\"\u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0648\u0632\u064a\u0627\u062f\u0629 \u0645\u0628\u064a\u0639\u0627\u062a \u0627\u0644\u0645\u062a\u062c\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Machine Learning\",\"framework\":\"TensorFlow\",\"functionality\":\"Recommendation System\",\"api_name\":\"dmonn/recsys-v2\",\"api_call\":\"train_recommendation_model('dataset.csv', 'user_id', 'item_id')\",\"api_arguments\":[\"path_to_dataset.csv\", \"user_id_column\", \"item_id_column\"],\"python_environment_requirements\":[\"tensorflow\", \"pandas\"], \"example_code\":\"import tensorflow as tf\\nimport pandas as pd\\n# Load dataset\\ndataset = pd.read_csv('dataset.csv')\\n# Train recommendation model\\ntrain_recommendation_model(dataset, 'user_id', 'item_id')\",\"performance\":{\"dataset\":\"Retail Sales Data\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Recommendation System model built using TensorFlow framework for improving the online shopping experience and boosting store sales based on historical user-item interactions.\"},\"output\":\"<<<domain>>>: Machine Learning\\n<<<api_call>>>: train_recommendation_model('dataset.csv', 'user_id', 'item_id')\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062a\u0627\u0631\u064a\u062e \u062a\u0641\u0627\u0639\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0645\u0639 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0645\u0646 \u0645\u0644\u0641 'dataset.csv'.\\n2. \u064a\u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0646\u0645\u0648\u0630\u062c \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 'train_recommendation_model' \u0627\u0644\u062a\u064a \u064a\u062a\u0645 \u062a\u0645\u0631\u064a\u0631\u0647\u0627 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0623\u0639\u0645\u062f\u0629 \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u0644\u0639\u0646\u0635\u0631.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0645\u0646\u062a\u062c\u0627\u062a \u0645\u062d\u062f\u062f\u0629 \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0633\u062c\u0644\u0627\u062a \u062a\u0641\u0627\u0639\u0644\u0647\u0645 \u0627\u0644\u0633\u0627\u0628\u0642\u0629\u060c \u0645\u0645\u0627 \u064a\u0632\u064a\u062f \u0645\u0646 \u0641\u0631\u0635 \u0627\u0644\u0634\u0631\u0627\u0621 \u0648\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a.\"}]}", "{\"instruction\":\"\u062a\u0648\u0644\u064a\u062f \u0641\u064a\u062f\u064a\u0648 \u0645\u0646 \u0648\u0635\u0641 \u0646\u0635\u064a \u0644\u0645\u0634\u0647\u062f \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0648\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u062a\u0646\u0641\u064a\u0630 \u0630\u0644\u0643.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0641\u064a\u062f\u064a\u0648 \u0641\u0639\u0644\u064a\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635.\"}]}"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A tiny random mt5 model for text generation\"\n                },\n                \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0648\u0641\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0642\u0631\u0649 \u0627\u0644\u0646\u0627\u0626\u064a\u0629\u060c \u0642\u0627\u0645 \u0639\u0627\u0644\u0645 \u0628\u0627\u0628\u062a\u0643\u0627\u0631 \u062c\u0647\u0627\u0632 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0642\u0639 \u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"CloudyPredictor\",\n                    \"api_name\": \"Raiko-204/cloudy-predictor-v2\",\n                    \"api_call\": \"mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\",\n                    \"api_arguments\": [\n                        \"your_configuration_file_path.yaml\",\n                        \"run_id\"\n                    ],\n                    \"python_environment_requirements\": [\n                        \"unity-ml-agents\",\n                        \"deep-reinforcement-learning\",\n                        \"ML-Agents-CloudyPredictor\"\n                    ],\n                    \"example_code\": \"Step 1: Write your model_id: Raiko-204/cloudy-predictor-v2\\nStep 2: Select your dataset file in .csv format\\nExecute the prediction and view the results \u2601\ufe0f\",\n                    \"performance\": {\n                        \"dataset\": \"Weather Samples\",\n                        \"accuracy\": \"Not provided\"\n                    },\n                    \"description\": \"A trained model of a CloudyPredictor agent predicting weather patterns using Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u062a\u0646\u0628\u0626 \\\"Raiko-204/cloudy-predictor-v2.1\\\" \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'weather_samples.csv'.\\n3. \u0633\u064a\u062a\u0639\u064a\u0646 \u0639\u0644\u064a\u0643 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u0644\u062a\u062d\u062f\u064a\u062f \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0646\u0628\u0624 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 CloudyPredictor.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-predict' \u0645\u0639 \u0645\u0644\u0641 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628 \u0628\u0634\u0643\u0644 \u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u062a\u0645\u062a\u0639 \u0628\u0645\u0634\u0627\u0647\u062f\u0629 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u2601\ufe0f\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0633\u0627\u0641\u0631 \u0627\u0644\u0645\u0647\u0646\u062f\u0633 \u064a\u0648\u0633\u0641 \u0625\u0644\u0649 \u0639\u0645\u0642 \u0627\u0644\u0628\u062d\u0627\u0631 \u0628\u063a\u0648\u0627\u0635\u0629 \u0645\u064f\u062c\u0647\u0632\u0629 \u0628\u0646\u0638\u0627\u0645 \u0631\u0624\u064a\u0629 \u0639\u0645\u064a\u0642 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Computer Vision Underwater Object Detection\",\n                    \"framework\": \"TensorFlow\",\n                    \"functionality\": \"UnderwaterObjectDetector\",\n                    \"api_name\": \"aquaman/underwater-detector\",\n                    \"api_call\": \"tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\",\n                    \"api_arguments\": [],\n                    \"python_environment_requirements\": [\n                        \"tensorflow\",\n                        \"object-detection\"\n                    ],\n                    \"example_code\": \"Step 1: Specify the model: aquaman/underwater-detector\\nStep 2: Input the image file of the underwater scene\\nExecute the detection algorithm and explore the identified creatures \ud83d\udc20\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A specialized detector for identifying underwater creatures using TensorFlow in marine environments.\"\n                },\n                \"output\": \"<<<domain>>>: Computer Vision Underwater Object Detection\\n<<<api_call>>>: tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0645\u062b\u0644 TensorFlow \u0648object-detection \u0641\u064a \u0628\u064a\u0626\u062a\u0643 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0628\u0627\u064a\u062b\u0648\u0646.\\n2. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0633\u062a\u0634\u0627\u0631\u064a 'aquaman/underwater-detector' \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0645\u0631 tfdetect. \u064a\u0633\u062a\u0644\u0632\u0645 \u0630\u0644\u0643 \u062a\u0648\u0641\u0631 \u0635\u0648\u0631\u0629 \u0644\u0644\u0645\u0634\u0647\u062f \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0625\u062c\u0631\u0627\u0621 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0627\u0644\u0643\u0634\u0641 \u0648\u0627\u0633\u062a\u0643\u0634\u0627\u0641 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0641\u0629 \ud83d\udc20\\n\"\n            }\n        ]\n    }\n]", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c MT5 \u0639\u0634\u0648\u0627\u0626\u064a \u0635\u063a\u064a\u0631 \u0644\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635\u0648\u0635.\"\n                },\n                \"output\": \"<<<domain>>>: \u0645\u0648\u0644\u062f \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0644\u063a\u0648\u064a\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062d\u0645\u0644.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0645\u0634\u0647\u062f \u0641\u064a\u062f\u064a\u0648 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0648\u0635\u0641 \u0646\u0635\u064a. \u0646\u0631\u064a\u062f \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0627 \u0627\u0644\u0648\u0635\u0641 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648\u060c \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629\u061f\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Multimodal Text-to-Video\",\n                    \"framework\": \"Hugging Face\",\n                    \"functionality\": \"Text-to-Video\",\n                    \"api_name\": \"chavinlo/TempoFunk\",\n                    \"api_call\": \"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\n                    \"api_arguments\": [\"input_text\"],\n                    \"python_environment_requirements\": [\"transformers\"],\n                    \"example_code\": \"\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"\n                },\n                \"output\": \"<<<domain>>>: \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0648\u0633\u0627\u0626\u0637\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a\u064b\u0627.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0646\u062d\u0646 \u0646\u0645\u0644\u0643 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u0644\u062a\u0642\u0648\u0646 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u064a\u0644\u0639\u0628\u0648\u0627 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0633\u0627\u0639\u062f\u0647\u0645 \u0639\u0644\u0649 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"SoccerTwos\",\n                    \"api_name\": \"Raiden-1001/poca-Soccerv7\",\n                    \"api_call\": \"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\n                    \"api_arguments\": [\"your_configuration_file_path.yaml\", \"run_id\"],\n                    \"python_environment_requirements\": [\"unity-ml-agents\", \"deep-reinforcement-learning\", \"ML-Agents-SoccerTwos\"],\n                    \"example_code\": \"Step 1: \u0627\u0643\u062a\u0628 model_id \u0627\u0644\u062e\u0627\u0635 \u0628\u0643: Raiden-1001/poca-Soccerv7\\nStep 2: \u062d\u062f\u062f \u0645\u0644\u0641\u0643 .nn/.onnx\\n\u0627\u0646\u0642\u0631 \u0639\u0644\u0649 \u0634\u0627\u0647\u062f \u0627\u0644\u0648\u0643\u064a\u0644 \u064a\u0644\u0639\u0628 \ud83d\udc40\",\n                    \"performance\": {\n                        \"dataset\": \"SoccerTwos\",\n                        \"accuracy\": \"\u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0631\"\n                    },\n                    \"description\": \"\u0647\u0630\u0627 \u0647\u0648 \u0646\u0645\u0648\u0630\u062c \u062a\u062f\u0631\u064a\u0628 \u0648\u0643\u064a\u0644 poca \u064a\u0644\u0639\u0628 \u0644\u0639\u0628\u0629 SoccerTwos \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0642\u0648\u064a\u0645\u064a\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1. \u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\"\n            }\n        ]\n    }\n]\n```", "{\"instruction\":\"\u0646\u0642\u0648\u0645 \u0628\u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u062a\u0648\u0627\u0635\u0644 \u0627\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u064a \u0648\u0646\u0631\u064a\u062f \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u062d\u0644\u064a\u0644 \u0645\u0634\u0627\u0639\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0627\u0644\u0646\u0635\u064a\u0629 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"NLP Sentiment Analysis\",\"framework\":\"Hugging Face\",\"functionality\":\"Sentiment Analysis\",\"api_name\":\"nlpcraft/sentiment-analysis\",\"api_call\":\"pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\",\"api_arguments\":\"text\",\"python_environment_requirements\":[\"transformers\",\"huggingface\"],\"example_code\":\"from transformers import pipeline\\nnlp = pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\nresult = nlp('I love this product')\\nprint(result)\",\"performance\":{\"dataset\":\"Custom dataset\",\"accuracy\":\"Not specified\"},\"description\":\"A sentiment analysis model trained for text analysis using the Hugging Face framework. This model can classify text into positive, negative, or neutral sentiment categories.\"},\"output\":\"<<<domain>>>: NLP Sentiment Analysis\\n<<<api_call>>>: pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u0623\u0646\u0634\u0626 pipeline \u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0645\u0646 \u0627\u0644\u0646\u0635 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0639\u062a\u0645\u062f 'nlpcraft/sentiment-analysis'. \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u062d\u0644\u064a\u0644 \u0648\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0641\u064a \u0627\u0644\u0646\u0635\u0648\u0635.\\n3. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0635. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u0641\u0627\u0639\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646.\"}]}", "{\"instruction\":\"\u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0648\u0632\u064a\u0627\u062f\u0629 \u0645\u0628\u064a\u0639\u0627\u062a \u0627\u0644\u0645\u062a\u062c\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Machine Learning\",\"framework\":\"TensorFlow\",\"functionality\":\"Recommendation System\",\"api_name\":\"dmonn/recsys-v2\",\"api_call\":\"train_recommendation_model('dataset.csv', 'user_id', 'item_id')\",\"api_arguments\":[\"path_to_dataset.csv\", \"user_id_column\", \"item_id_column\"],\"python_environment_requirements\":[\"tensorflow\", \"pandas\"], \"example_code\":\"import tensorflow as tf\\nimport pandas as pd\\n# Load dataset\\ndataset = pd.read_csv('dataset.csv')\\n# Train recommendation model\\ntrain_recommendation_model(dataset, 'user_id', 'item_id')\",\"performance\":{\"dataset\":\"Retail Sales Data\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Recommendation System model built using TensorFlow framework for improving the online shopping experience and boosting store sales based on historical user-item interactions.\"},\"output\":\"<<<domain>>>: Machine Learning\\n<<<api_call>>>: train_recommendation_model('dataset.csv', 'user_id', 'item_id')\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062a\u0627\u0631\u064a\u062e \u062a\u0641\u0627\u0639\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0645\u0639 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0645\u0646 \u0645\u0644\u0641 'dataset.csv'.\\n2. \u064a\u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0646\u0645\u0648\u0630\u062c \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 'train_recommendation_model' \u0627\u0644\u062a\u064a \u064a\u062a\u0645 \u062a\u0645\u0631\u064a\u0631\u0647\u0627 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0623\u0639\u0645\u062f\u0629 \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u0644\u0639\u0646\u0635\u0631.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0645\u0646\u062a\u062c\u0627\u062a \u0645\u062d\u062f\u062f\u0629 \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0633\u062c\u0644\u0627\u062a \u062a\u0641\u0627\u0639\u0644\u0647\u0645 \u0627\u0644\u0633\u0627\u0628\u0642\u0629\u060c \u0645\u0645\u0627 \u064a\u0632\u064a\u062f \u0645\u0646 \u0641\u0631\u0635 \u0627\u0644\u0634\u0631\u0627\u0621 \u0648\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a.\"}]}", "{\"instruction\":\"\u062a\u0648\u0644\u064a\u062f \u0641\u064a\u062f\u064a\u0648 \u0645\u0646 \u0648\u0635\u0641 \u0646\u0635\u064a \u0644\u0645\u0634\u0647\u062f \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0648\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u062a\u0646\u0641\u064a\u0630 \u0630\u0644\u0643.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0641\u064a\u062f\u064a\u0648 \u0641\u0639\u0644\u064a\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635.\"}]}", "{\"instruction\":\"\u0628\u0646\u0627\u0621 \u0639\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062a\u0648\u0641\u0631\u0629\u060c \u0642\u0627\u0645\u062a \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u062a\u0637\u0648\u064a\u0631 \u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0642\u062f\u064a\u0631 \u0631\u0648\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u0627\u0626\u0641. \u0646\u0631\u064a\u062f \u062a\u0636\u0645\u064a\u0646 \u062e\u0627\u0635\u064a\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Audio Text-to-Speech\",\"framework\":\"ESPnet\",\"functionality\":\"Text-to-Speech\",\"api_name\":\"kan-bayashi_ljspeech_vits\",\"api_call\":\"pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"from transformers import pipeline; tts = pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits'); tts('Hello World')\",\"performance\":{\"dataset\":\"ljspeech\",\"accuracy\":\"Not mentioned\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a ljspeech \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0623\u062f\u0648\u0627\u062a ESPnet. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0645\u0631\u0643\u0628.\"},\"output\":\"<<<domain>>>: Audio Text-to-Speech\\n<<<api_call>>>: pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\\n<<<api_provider>>>: ESPnet\\n<<<explanation>>>:1. \u0623\u0648\u0644\u0627\u064b\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers.\\n2. \u062b\u0645\u060c \u0646\u0646\u0634\u0626 pipeline \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u0627\u064b 'espnet/kan-bayashi_ljspeech_vits'.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0622\u0646 \u062a\u062d\u0648\u064a\u0644 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0643\u0644\u0627\u0645 \u0627\u0644\u0645\u0648\u0644\u0651\u064e\u062f \u0641\u064a \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0641\u0627\u0626\u062f\u0629 \u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\"}]}"]
["{\"instruction\":\"\u062a\u0642\u0648\u0645 \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0628\u0646\u0627\u0621 \u0645\u0646\u062a\u062c \u0644\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0648\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a\u060c \u0648\u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 \u0627\u0644\u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0629 \u0627\u0644\u0639\u0645\u064a\u0642\u0629 \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0633\u064a\u0627\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u062a\u0648\u062c\u064a\u0647\u0646\u0627 \u0646\u062d\u0648 \u0625\u0637\u0627\u0631 \u0639\u0645\u0644 \u0645\u0646\u0627\u0633\u0628 \u0644\u0647\u0630\u0627 \u0627\u0644\u063a\u0631\u0636\u061f\",\"instances\":[{\"API\":{\"domain\":\"Deep Learning Frameworks\",\"framework\":\"PyTorch\",\"functionality\":\"Neural Networks\",\"api_name\":\"torch.nn.Module\",\"api_call\":\"torch.nn.Module()\",\"api_arguments\":[],\"python_environment_requirements\":[\"torch\"],\"example_code\":\"import torch\\nimport torch.nn as nn\\n\\nclass NeuralNetwork(nn.Module):\\n    def __init__(self):\\n        super(NeuralNetwork, self).__init__()\\n        # Define your neural network architecture here\\n    \\n    def forward(self, x):\\n        # Define the forward pass\\n        return x\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A PyTorch neural network module for building deep learning models. You can define the architecture of your neural network and customize the forward pass method to create sophisticated deep learning models.\"},\"output\":\"<<<domain>>>: Deep Learning Frameworks\\n<<<api_call>>>: torch.nn.Module()\\n<<<api_provider>>>: PyTorch\\n<<<explanation>>>1. \u0627\u0633\u062a\u0648\u0631\u062f \u062d\u0632\u0645\u0629 torch \u0644\u062a\u0648\u0641\u064a\u0631 \u0648\u0638\u0627\u0626\u0641 \u0634\u0628\u0643\u0627\u062a \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u0639\u0645\u064a\u0642\u0629.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0641\u0626\u0629 \u062c\u062f\u064a\u062f\u0629 \u062a\u0631\u062b \u0645\u0646 torch.nn.Module \u0644\u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u062e\u0627\u0635 \u0628\u0643.\\n3. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u0647\u0646\u062f\u0633\u0629 \u0634\u0628\u0643\u0629 \u0627\u0644\u0639\u0635\u0628\u064a\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 __init__ \u0644\u0644\u0641\u0626\u0629.\\n4. \u0642\u0645 \u0628\u062a\u0639\u0631\u064a\u0641 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0625\u0634\u0627\u0631\u0629 \u0625\u0644\u0649 \u0627\u0644\u0623\u0645\u0627\u0645 \u062f\u0627\u062e\u0644 \u062f\u0627\u0644\u0629 forward \u0648\u0642\u0645 \u0628\u062a\u062e\u0635\u064a\u0635 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0623\u0648\u0627\u0645\u0631 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0644\u0625\u062c\u0631\u0627\u0621 \u0627\u0644\u0639\u0645\u0644\u064a\u0627\u062a \u0627\u0644\u062d\u0633\u0627\u0628\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a. \"}]}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0646\u0635 \u0642\u0635\u064a\u0631 \u064a\u0635\u0641 \u0645\u0634\u0647\u062f\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"gpt-2\",\"api_call\":\"AutoModelForCausalLM.from_pretrained('gpt-2')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('A beautiful sunset over the sea...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A language model for text generation using Hugging Face Transformers.\"},\"output\":\"<<<domain>>>: \u0645\u0639\u0627\u0644\u062c\u0629 \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0637\u0628\u064a\u0639\u064a\u0629 \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u0646\u0635\u0648\u0635\\n<<<api_call>>>: AutoModelForCausalLM.from_pretrained('gpt-2')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629 \u0648\u0647\u064a AutoModelForCausalLM \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'gpt-2' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0644\u0641\u0626\u0629 AutoModelForCausalLM.\\n3. \u0623\u0646\u0634\u0649\u0621 \u0648\u0635\u0641\u064b\u0627 \u062c\u0645\u064a\u0644\u064b\u0627 \u0644\u063a\u0631\u0648\u0628 \u0627\u0644\u0634\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0628\u062d\u0631 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0645\u0648\u062f\u064a\u0644 \u0627\u0644\u0645\u062d\u0645\u0644.\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u0643\u062a\u0627\u0628\u0629 \u0642\u0635\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0632\u0645\u0627\u0646 \u0628\u0639\u064a\u062f' \u0648 \u062a\u0646\u062a\u0647\u064a \u0628\u062c\u0645\u0644\u0629 '\u0648\u0639\u0627\u0634\u0648\u0627 \u062f\u0648\u0645\u0627\u064b \u0633\u0639\u062f\u0627\u0621 \u0648\u0645\u0633\u062a\u0642\u0631\u064a\u0646'.\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":null,\"python_environment_requirements\":null,\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A tiny random mt5 model for text generation\"\n                },\n                \"output\": \"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0645\u062f\u064a\u0646\u0629 \u0628\u0639\u064a\u062f\u0629 \u062c\u062f\u064b\u0627' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0648\u0641\u064a \u0625\u062d\u062f\u0649 \u0627\u0644\u0642\u0631\u0649 \u0627\u0644\u0646\u0627\u0626\u064a\u0629\u060c \u0642\u0627\u0645 \u0639\u0627\u0644\u0645 \u0628\u0627\u0628\u062a\u0643\u0627\u0631 \u062c\u0647\u0627\u0632 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0642\u0639 \u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"CloudyPredictor\",\n                    \"api_name\": \"Raiko-204/cloudy-predictor-v2\",\n                    \"api_call\": \"mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\",\n                    \"api_arguments\": [\n                        \"your_configuration_file_path.yaml\",\n                        \"run_id\"\n                    ],\n                    \"python_environment_requirements\": [\n                        \"unity-ml-agents\",\n                        \"deep-reinforcement-learning\",\n                        \"ML-Agents-CloudyPredictor\"\n                    ],\n                    \"example_code\": \"Step 1: Write your model_id: Raiko-204/cloudy-predictor-v2\\nStep 2: Select your dataset file in .csv format\\nExecute the prediction and view the results \u2601\ufe0f\",\n                    \"performance\": {\n                        \"dataset\": \"Weather Samples\",\n                        \"accuracy\": \"Not provided\"\n                    },\n                    \"description\": \"A trained model of a CloudyPredictor agent predicting weather patterns using Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-predict-clouds --model-id='Raiko-204/cloudy-predictor-v2.1' --input-file='./weather_samples.csv'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 \u0627\u0644\u0645\u062a\u0646\u0628\u0626 \\\"Raiko-204/cloudy-predictor-v2.1\\\" \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'weather_samples.csv'.\\n3. \u0633\u064a\u062a\u0639\u064a\u0646 \u0639\u0644\u064a\u0643 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u0644\u062a\u062d\u062f\u064a\u062f \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0627\u0644\u062a\u0646\u0628\u0624 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 CloudyPredictor.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-predict' \u0645\u0639 \u0645\u0644\u0641 \u0627\u0644\u0625\u062f\u062e\u0627\u0644 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u062d\u0631\u0643\u0629 \u0627\u0644\u0633\u062d\u0628 \u0628\u0634\u0643\u0644 \u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u062a\u0645\u062a\u0639 \u0628\u0645\u0634\u0627\u0647\u062f\u0629 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u2601\ufe0f\\n\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0633\u0627\u0641\u0631 \u0627\u0644\u0645\u0647\u0646\u062f\u0633 \u064a\u0648\u0633\u0641 \u0625\u0644\u0649 \u0639\u0645\u0642 \u0627\u0644\u0628\u062d\u0627\u0631 \u0628\u063a\u0648\u0627\u0635\u0629 \u0645\u064f\u062c\u0647\u0632\u0629 \u0628\u0646\u0638\u0627\u0645 \u0631\u0624\u064a\u0629 \u0639\u0645\u064a\u0642 \u0644\u0644\u0643\u0634\u0641 \u0639\u0646 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Computer Vision Underwater Object Detection\",\n                    \"framework\": \"TensorFlow\",\n                    \"functionality\": \"UnderwaterObjectDetector\",\n                    \"api_name\": \"aquaman/underwater-detector\",\n                    \"api_call\": \"tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\",\n                    \"api_arguments\": [],\n                    \"python_environment_requirements\": [\n                        \"tensorflow\",\n                        \"object-detection\"\n                    ],\n                    \"example_code\": \"Step 1: Specify the model: aquaman/underwater-detector\\nStep 2: Input the image file of the underwater scene\\nExecute the detection algorithm and explore the identified creatures \ud83d\udc20\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"A specialized detector for identifying underwater creatures using TensorFlow in marine environments.\"\n                },\n                \"output\": \"<<<domain>>>: Computer Vision Underwater Object Detection\\n<<<api_call>>>: tfdetect --model='aquaman/underwater-detector' --input-image='./underwater_scene.jpg'\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629\u060c \u0645\u062b\u0644 TensorFlow \u0648object-detection \u0641\u064a \u0628\u064a\u0626\u062a\u0643 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u0628\u0627\u064a\u062b\u0648\u0646.\\n2. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u0645\u0648\u0630\u062c \u0643\u0627\u0633\u062a\u0634\u0627\u0631\u064a 'aquaman/underwater-detector' \u0644\u062a\u062d\u062f\u064a\u062f \u0627\u0644\u0643\u0627\u0626\u0646\u0627\u062a \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0645\u0631 tfdetect. \u064a\u0633\u062a\u0644\u0632\u0645 \u0630\u0644\u0643 \u062a\u0648\u0641\u0631 \u0635\u0648\u0631\u0629 \u0644\u0644\u0645\u0634\u0647\u062f \u062a\u062d\u062a \u0627\u0644\u0645\u0627\u0621.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0625\u062c\u0631\u0627\u0621 \u062e\u0648\u0627\u0631\u0632\u0645\u064a\u0629 \u0627\u0644\u0643\u0634\u0641 \u0648\u0627\u0633\u062a\u0643\u0634\u0627\u0641 \u0627\u0644\u0645\u062e\u0644\u0648\u0642\u0627\u062a \u0627\u0644\u0645\u0639\u0631\u0641\u0629 \ud83d\udc20\\n\"\n            }\n        ]\n    }\n]", "[\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Natural Language Processing Text Generation\",\n                    \"framework\": \"Hugging Face Transformers\",\n                    \"functionality\": \"Transformers\",\n                    \"api_name\": \"lewtun/tiny-random-mt5\",\n                    \"api_call\": \"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\n                    \"api_arguments\": \"text\",\n                    \"python_environment_requirements\": \"transformers\",\n                    \"example_code\": \"nlp('Once upon a time...')\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c MT5 \u0639\u0634\u0648\u0627\u0626\u064a \u0635\u063a\u064a\u0631 \u0644\u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635\u0648\u0635.\"\n                },\n                \"output\": \"<<<domain>>>: \u0645\u0648\u0644\u062f \u0627\u0644\u0646\u0635\u0648\u0635 \u0627\u0644\u0644\u063a\u0648\u064a\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0639\u0628\u0627\u0631\u0629 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062d\u0645\u0644.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0623\u0646\u0634\u0626 \u0645\u0634\u0647\u062f \u0641\u064a\u062f\u064a\u0648 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0648\u0635\u0641 \u0646\u0635\u064a. \u0646\u0631\u064a\u062f \u062a\u062d\u0648\u064a\u0644 \u0647\u0630\u0627 \u0627\u0644\u0648\u0635\u0641 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648\u060c \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0645\u0633\u0627\u0639\u062f\u0629\u061f\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Multimodal Text-to-Video\",\n                    \"framework\": \"Hugging Face\",\n                    \"functionality\": \"Text-to-Video\",\n                    \"api_name\": \"chavinlo/TempoFunk\",\n                    \"api_call\": \"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\n                    \"api_arguments\": [\"input_text\"],\n                    \"python_environment_requirements\": [\"transformers\"],\n                    \"example_code\": \"\",\n                    \"performance\": {\n                        \"dataset\": \"\",\n                        \"accuracy\": \"\"\n                    },\n                    \"description\": \"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"\n                },\n                \"output\": \"<<<domain>>>: \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0645\u062a\u0639\u062f\u062f \u0627\u0644\u0648\u0633\u0627\u0626\u0637\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a\u064b\u0627.\"\n            }\n        ]\n    },\n    {\n        \"instruction\": \"\u0646\u062d\u0646 \u0646\u0645\u0644\u0643 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u0644\u062a\u0642\u0648\u0646 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u064a\u0644\u0639\u0628\u0648\u0627 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0633\u0627\u0639\u062f\u0647\u0645 \u0639\u0644\u0649 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\n        \"instances\": [\n            {\n                \"API\": {\n                    \"domain\": \"Reinforcement Learning\",\n                    \"framework\": \"ML-Agents\",\n                    \"functionality\": \"SoccerTwos\",\n                    \"api_name\": \"Raiden-1001/poca-Soccerv7\",\n                    \"api_call\": \"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\n                    \"api_arguments\": [\"your_configuration_file_path.yaml\", \"run_id\"],\n                    \"python_environment_requirements\": [\"unity-ml-agents\", \"deep-reinforcement-learning\", \"ML-Agents-SoccerTwos\"],\n                    \"example_code\": \"Step 1: \u0627\u0643\u062a\u0628 model_id \u0627\u0644\u062e\u0627\u0635 \u0628\u0643: Raiden-1001/poca-Soccerv7\\nStep 2: \u062d\u062f\u062f \u0645\u0644\u0641\u0643 .nn/.onnx\\n\u0627\u0646\u0642\u0631 \u0639\u0644\u0649 \u0634\u0627\u0647\u062f \u0627\u0644\u0648\u0643\u064a\u0644 \u064a\u0644\u0639\u0628 \ud83d\udc40\",\n                    \"performance\": {\n                        \"dataset\": \"SoccerTwos\",\n                        \"accuracy\": \"\u063a\u064a\u0631 \u0645\u062a\u0648\u0641\u0631\"\n                    },\n                    \"description\": \"\u0647\u0630\u0627 \u0647\u0648 \u0646\u0645\u0648\u0630\u062c \u062a\u062f\u0631\u064a\u0628 \u0648\u0643\u064a\u0644 poca \u064a\u0644\u0639\u0628 \u0644\u0639\u0628\u0629 SoccerTwos \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Unity ML-Agents.\"\n                },\n                \"output\": \"<<<domain>>>: \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u062a\u0642\u0648\u064a\u0645\u064a\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1. \u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2. \u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4. \u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\"\n            }\n        ]\n    }\n]\n```", "{\"instruction\":\"\u0646\u0642\u0648\u0645 \u0628\u0628\u0646\u0627\u0621 \u062a\u0637\u0628\u064a\u0642 \u0644\u0644\u062a\u0648\u0627\u0635\u0644 \u0627\u0644\u0627\u062c\u062a\u0645\u0627\u0639\u064a \u0648\u0646\u0631\u064a\u062f \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u0644\u062a\u062d\u0644\u064a\u0644 \u0645\u0634\u0627\u0639\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0627\u0644\u0646\u0635\u064a\u0629 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\",\"instances\":[{\"API\":{\"domain\":\"NLP Sentiment Analysis\",\"framework\":\"Hugging Face\",\"functionality\":\"Sentiment Analysis\",\"api_name\":\"nlpcraft/sentiment-analysis\",\"api_call\":\"pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\",\"api_arguments\":\"text\",\"python_environment_requirements\":[\"transformers\",\"huggingface\"],\"example_code\":\"from transformers import pipeline\\nnlp = pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\nresult = nlp('I love this product')\\nprint(result)\",\"performance\":{\"dataset\":\"Custom dataset\",\"accuracy\":\"Not specified\"},\"description\":\"A sentiment analysis model trained for text analysis using the Hugging Face framework. This model can classify text into positive, negative, or neutral sentiment categories.\"},\"output\":\"<<<domain>>>: NLP Sentiment Analysis\\n<<<api_call>>>: pipeline('sentiment-analysis', model='nlpcraft/sentiment-analysis')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u0623\u0646\u0634\u0626 pipeline \u0644\u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0645\u0646 \u0627\u0644\u0646\u0635 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0639\u062a\u0645\u062f 'nlpcraft/sentiment-analysis'. \u0633\u064a\u062a\u0645 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u062d\u0644\u064a\u0644 \u0648\u062a\u0635\u0646\u064a\u0641 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0641\u064a \u0627\u0644\u0646\u0635\u0648\u0635.\\n3. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u0627\u0644\u062f\u0627\u0644\u0629 \u0644\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u062a\u062d\u0644\u064a\u0644 \u0627\u0644\u0645\u0634\u0627\u0639\u0631 \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0635. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0646\u062a\u0627\u0626\u062c \u0627\u0644\u062a\u062d\u0644\u064a\u0644 \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u0641\u0627\u0639\u0644 \u0627\u0644\u062a\u0637\u0628\u064a\u0642 \u0645\u0639 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646.\"}]}", "{\"instruction\":\"\u0627\u0633\u062a\u062e\u062f\u0645 \u062a\u0642\u0646\u064a\u0627\u062a \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a \u0644\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0648\u0632\u064a\u0627\u062f\u0629 \u0645\u0628\u064a\u0639\u0627\u062a \u0627\u0644\u0645\u062a\u062c\u0631.\",\"instances\":[{\"API\":{\"domain\":\"Machine Learning\",\"framework\":\"TensorFlow\",\"functionality\":\"Recommendation System\",\"api_name\":\"dmonn/recsys-v2\",\"api_call\":\"train_recommendation_model('dataset.csv', 'user_id', 'item_id')\",\"api_arguments\":[\"path_to_dataset.csv\", \"user_id_column\", \"item_id_column\"],\"python_environment_requirements\":[\"tensorflow\", \"pandas\"], \"example_code\":\"import tensorflow as tf\\nimport pandas as pd\\n# Load dataset\\ndataset = pd.read_csv('dataset.csv')\\n# Train recommendation model\\ntrain_recommendation_model(dataset, 'user_id', 'item_id')\",\"performance\":{\"dataset\":\"Retail Sales Data\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Recommendation System model built using TensorFlow framework for improving the online shopping experience and boosting store sales based on historical user-item interactions.\"},\"output\":\"<<<domain>>>: Machine Learning\\n<<<api_call>>>: train_recommendation_model('dataset.csv', 'user_id', 'item_id')\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u062a\u0627\u0631\u064a\u062e \u062a\u0641\u0627\u0639\u0644\u0627\u062a \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0645\u0639 \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0645\u0646 \u0645\u0644\u0641 'dataset.csv'.\\n2. \u064a\u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0646\u0645\u0648\u0630\u062c \u0646\u0638\u0627\u0645 \u0627\u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0648\u0638\u064a\u0641\u0629 'train_recommendation_model' \u0627\u0644\u062a\u064a \u064a\u062a\u0645 \u062a\u0645\u0631\u064a\u0631\u0647\u0627 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0623\u0639\u0645\u062f\u0629 \u062a\u0639\u0631\u064a\u0641 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0648\u0627\u0644\u0639\u0646\u0635\u0631.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0635\u064a\u0627\u062a \u0645\u0646\u062a\u062c\u0627\u062a \u0645\u062d\u062f\u062f\u0629 \u0644\u0644\u0639\u0645\u0644\u0627\u0621 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0633\u062c\u0644\u0627\u062a \u062a\u0641\u0627\u0639\u0644\u0647\u0645 \u0627\u0644\u0633\u0627\u0628\u0642\u0629\u060c \u0645\u0645\u0627 \u064a\u0632\u064a\u062f \u0645\u0646 \u0641\u0631\u0635 \u0627\u0644\u0634\u0631\u0627\u0621 \u0648\u062a\u062d\u0633\u064a\u0646 \u062a\u062c\u0631\u0628\u0629 \u0627\u0644\u062a\u0633\u0648\u0642 \u0639\u0628\u0631 \u0627\u0644\u0625\u0646\u062a\u0631\u0646\u062a.\"}]}", "{\"instruction\":\"\u062a\u0648\u0644\u064a\u062f \u0641\u064a\u062f\u064a\u0648 \u0645\u0646 \u0648\u0635\u0641 \u0646\u0635\u064a \u0644\u0645\u0634\u0647\u062f \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629 \u0648\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u062a\u0646\u0641\u064a\u0630 \u0630\u0644\u0643.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0623.\\n5. \u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u064a\u062a\u0645 \u062a\u0648\u0644\u064a\u062f\u0647 \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0641\u064a\u062f\u064a\u0648 \u0641\u0639\u0644\u064a\u060c \u0644\u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635.\"}]}", "{\"instruction\":\"\u0628\u0646\u0627\u0621 \u0639\u0644\u0649 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062a\u0648\u0641\u0631\u0629\u060c \u0642\u0627\u0645\u062a \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u062a\u0637\u0648\u064a\u0631 \u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0642\u062f\u064a\u0631 \u0631\u0648\u0627\u062a\u0628 \u0627\u0644\u0648\u0638\u0627\u0626\u0641. \u0646\u0631\u064a\u062f \u062a\u0636\u0645\u064a\u0646 \u062e\u0627\u0635\u064a\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Audio Text-to-Speech\",\"framework\":\"ESPnet\",\"functionality\":\"Text-to-Speech\",\"api_name\":\"kan-bayashi_ljspeech_vits\",\"api_call\":\"pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"from transformers import pipeline; tts = pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits'); tts('Hello World')\",\"performance\":{\"dataset\":\"ljspeech\",\"accuracy\":\"Not mentioned\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a ljspeech \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u062c\u0645\u0648\u0639\u0629 \u0627\u0644\u0623\u062f\u0648\u0627\u062a ESPnet. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0645\u0631\u0643\u0628.\"},\"output\":\"<<<domain>>>: Audio Text-to-Speech\\n<<<api_call>>>: pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\\n<<<api_provider>>>: ESPnet\\n<<<explanation>>>:1. \u0623\u0648\u0644\u0627\u064b\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u0623\u0645\u064a\u0646 \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers.\\n2. \u062b\u0645\u060c \u0646\u0646\u0634\u0626 pipeline \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u0627\u064b 'espnet/kan-bayashi_ljspeech_vits'.\\n3. \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0622\u0646 \u062a\u062d\u0648\u064a\u0644 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0648\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0643\u0644\u0627\u0645 \u0627\u0644\u0645\u0648\u0644\u0651\u064e\u062f \u0641\u064a \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0641\u0627\u0626\u062f\u0629 \u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642.\"}]}", "{\"instruction\":\"\u0642\u062f \u062a\u0645 \u062a\u0637\u0648\u064a\u0631 \u0645\u0646\u062a\u062c \u064a\u0633\u0645\u062d \u0628\u062a\u0648\u0644\u064a\u062f \u0641\u064a\u062f\u064a\u0648\u0647\u0627\u062a \u062a\u0633\u062a\u0646\u062f \u0625\u0644\u0649 \u0648\u0635\u0641 \u0646\u0635\u064a \u0644\u0645\u0634\u0627\u0647\u062f \u062a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629. \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u0643\u062a\u0627\u0628\u0629 \u0628\u0627\u0644\u0644\u063a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"input_text\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u064a\u0633\u062a\u062e\u062f\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0642\u0645 \u0628\u0625\u0633\u062a\u064a\u0631\u0627\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u062f\u0627\u0644\u0629 pipeline.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u064a\u0645\u0643\u0646\u0647 \u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0646\u0635\u064a \u0644\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0628\u0631\u064a \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u062a\u062d\u0648\u064a\u0644\u0647 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648 \u0644\u0644\u0646\u0645\u0648\u0630\u062c.\\n5. \u064a\u064f\u0644\u0627\u062d\u0638 \u0623\u0646 \u0627\u0644\u0646\u0627\u062a\u062c \u0627\u0644\u0630\u064a \u0633\u064a\u062a\u0645 \u0625\u0646\u062a\u0627\u062c\u0647 \u0645\u0646 \u0646\u0645\u0648\u0630\u062c GPT \u0633\u064a\u0643\u0648\u0646 \u0648\u0635\u0641\u064b\u0627 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0644\u0627 \u0641\u064a\u062f\u064a\u0648 \u0641\u0639\u0644\u064a\u060c \u062d\u064a\u062b \u0623\u0646 \u0646\u0645\u0627\u0630\u062c GPT \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0627\u0644\u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633\u062a \u0642\u0627\u062f\u0631\u0629 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a\u064b\u0627.\\n\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\n    \"instruction\": \"\u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c \u062c\u062f\u064a\u062f \u064a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0648\u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a \u062a\u0639\u0644\u064a\u0645\u064a\u0629.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Educational Content Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"edu-transformer-tiny-random\",\n                \"api_call\": \"AutoModel.from_pretrained('edu-transformer-tiny-random')\",\n                \"api_arguments\": \"text\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random educational transformer model for generating content related to educational purposes.\"\n            },\n            \"output\": \"<<<domain>>>: Educational Content Generation\\n<<<api_call>>>: AutoModel.from_pretrained('edu-transformer-tiny-random')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0645\u062b\u0644 AutoModel \u0648tokenizer\u060c \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'edu-transformer-tiny-random' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u062a\u0639\u0644\u064a\u0645\u064a \u0645\u062a\u0646\u0648\u0639\u060c \u0627\u0628\u062a\u062f\u0627\u0621\u064b \u0645\u0646 \u0646\u0635\u0648\u0635 \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0648\u062a\u0645\u0627\u0631\u064a\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0625\u0644\u0649 \u0645\u0648\u0627\u062f \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0645\u062e\u0635\u0635\u0629.\"\n        }\n    ]\n}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\n    \"instruction\": \"\u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c \u062c\u062f\u064a\u062f \u064a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0648\u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a \u062a\u0639\u0644\u064a\u0645\u064a\u0629.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Educational Content Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"edu-transformer-tiny-random\",\n                \"api_call\": \"AutoModel.from_pretrained('edu-transformer-tiny-random')\",\n                \"api_arguments\": \"text\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random educational transformer model for generating content related to educational purposes.\"\n            },\n            \"output\": \"<<<domain>>>: Educational Content Generation\\n<<<api_call>>>: AutoModel.from_pretrained('edu-transformer-tiny-random')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0645\u062b\u0644 AutoModel \u0648tokenizer\u060c \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'edu-transformer-tiny-random' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u062a\u0639\u0644\u064a\u0645\u064a \u0645\u062a\u0646\u0648\u0639\u060c \u0627\u0628\u062a\u062f\u0627\u0621\u064b \u0645\u0646 \u0646\u0635\u0648\u0635 \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0648\u062a\u0645\u0627\u0631\u064a\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0625\u0644\u0649 \u0645\u0648\u0627\u062f \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0645\u062e\u0635\u0635\u0629.\"\n        }\n    ]\n}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\n    \"instruction\": \"\u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c \u062c\u062f\u064a\u062f \u064a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0648\u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a \u062a\u0639\u0644\u064a\u0645\u064a\u0629.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Educational Content Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"edu-transformer-tiny-random\",\n                \"api_call\": \"AutoModel.from_pretrained('edu-transformer-tiny-random')\",\n                \"api_arguments\": \"text\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random educational transformer model for generating content related to educational purposes.\"\n            },\n            \"output\": \"<<<domain>>>: Educational Content Generation\\n<<<api_call>>>: AutoModel.from_pretrained('edu-transformer-tiny-random')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0645\u062b\u0644 AutoModel \u0648tokenizer\u060c \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'edu-transformer-tiny-random' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u062a\u0639\u0644\u064a\u0645\u064a \u0645\u062a\u0646\u0648\u0639\u060c \u0627\u0628\u062a\u062f\u0627\u0621\u064b \u0645\u0646 \u0646\u0635\u0648\u0635 \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0648\u062a\u0645\u0627\u0631\u064a\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0625\u0644\u0649 \u0645\u0648\u0627\u062f \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0645\u062e\u0635\u0635\u0629.\"\n        }\n    ]\n}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u064a\u062a\u0639\u0644\u0642 \u0637\u0644\u0628\u0646\u0627 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629. \u0646\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0645\u0633\u0627\u0639\u062f\u062a\u0646\u0627 \u0641\u064a \u0630\u0644\u0643\u061f\",\"instances\":[{\"API\":{\"domain\":\"Audio Text-to-Speech\",\"framework\":\"ESPnet\",\"functionality\":\"Text-to-Speech\",\"api_name\":\"kan-bayashi_ljspeech_vits\",\"api_call\":\"pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"from transformers import pipeline; tts = pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits'); tts('Hello World')\",\"performance\":{\"dataset\":\"ljspeech\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Text-to-Speech model trained on the ljspeech dataset using the ESPnet toolkit. This model can be used to convert text input into synthesized speech.\"},\"output\":\"<<<domain>>>: Audio Text-to-Speech\\n<<<api_call>>>: pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\\n<<<api_provider>>>: ESPnet\\n<<<explanation>>>:1. \u0623\u0648\u0644\u0627\u064b\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u0648\u0631\u064a\u062f \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u062b\u0645\u060c \u0642\u064f\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 pipeline \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'espnet/kan-bayashi_ljspeech_vits'. \u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0628\u064a\u0627\u0646\u0627\u062a ljspeech \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0645\u0631\u0643\u0628.\\n3. \u0627\u0644\u0622\u0646\u060c \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u062f\u0627\u0644\u0629 pipeline \u0647\u0630\u0647 \u0644\u062a\u062e\u0644\u064a\u0642 \u0635\u0648\u062a \u0627\u0644\u0643\u0644\u0627\u0645. \u0628\u0639\u062f \u0630\u0644\u0643\u060c \u064a\u0645\u0643\u0646\u0643 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0635\u0648\u062a \u0623\u0648 \u062f\u0645\u062c\u0647 \u0641\u064a \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629.\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\n    \"instruction\": \"\u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c \u062c\u062f\u064a\u062f \u064a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0648\u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a \u062a\u0639\u0644\u064a\u0645\u064a\u0629.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Educational Content Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"edu-transformer-tiny-random\",\n                \"api_call\": \"AutoModel.from_pretrained('edu-transformer-tiny-random')\",\n                \"api_arguments\": \"text\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random educational transformer model for generating content related to educational purposes.\"\n            },\n            \"output\": \"<<<domain>>>: Educational Content Generation\\n<<<api_call>>>: AutoModel.from_pretrained('edu-transformer-tiny-random')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0645\u062b\u0644 AutoModel \u0648tokenizer\u060c \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'edu-transformer-tiny-random' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u062a\u0639\u0644\u064a\u0645\u064a \u0645\u062a\u0646\u0648\u0639\u060c \u0627\u0628\u062a\u062f\u0627\u0621\u064b \u0645\u0646 \u0646\u0635\u0648\u0635 \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0648\u062a\u0645\u0627\u0631\u064a\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0625\u0644\u0649 \u0645\u0648\u0627\u062f \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0645\u062e\u0635\u0635\u0629.\"\n        }\n    ]\n}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u064a\u062a\u0639\u0644\u0642 \u0637\u0644\u0628\u0646\u0627 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629. \u0646\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0645\u0633\u0627\u0639\u062f\u062a\u0646\u0627 \u0641\u064a \u0630\u0644\u0643\u061f\",\"instances\":[{\"API\":{\"domain\":\"Audio Text-to-Speech\",\"framework\":\"ESPnet\",\"functionality\":\"Text-to-Speech\",\"api_name\":\"kan-bayashi_ljspeech_vits\",\"api_call\":\"pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"from transformers import pipeline; tts = pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits'); tts('Hello World')\",\"performance\":{\"dataset\":\"ljspeech\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Text-to-Speech model trained on the ljspeech dataset using the ESPnet toolkit. This model can be used to convert text input into synthesized speech.\"},\"output\":\"<<<domain>>>: Audio Text-to-Speech\\n<<<api_call>>>: pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\\n<<<api_provider>>>: ESPnet\\n<<<explanation>>>:1. \u0623\u0648\u0644\u0627\u064b\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u0648\u0631\u064a\u062f \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u062b\u0645\u060c \u0642\u064f\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 pipeline \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'espnet/kan-bayashi_ljspeech_vits'. \u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0628\u064a\u0627\u0646\u0627\u062a ljspeech \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0645\u0631\u0643\u0628.\\n3. \u0627\u0644\u0622\u0646\u060c \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u062f\u0627\u0644\u0629 pipeline \u0647\u0630\u0647 \u0644\u062a\u062e\u0644\u064a\u0642 \u0635\u0648\u062a \u0627\u0644\u0643\u0644\u0627\u0645. \u0628\u0639\u062f \u0630\u0644\u0643\u060c \u064a\u0645\u0643\u0646\u0643 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0635\u0648\u062a \u0623\u0648 \u062f\u0645\u062c\u0647 \u0641\u064a \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0649\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u0628\u0645\u0648\u0636\u0648\u0639 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\n    \"instruction\": \"\u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c \u062c\u062f\u064a\u062f \u064a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0648\u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a \u062a\u0639\u0644\u064a\u0645\u064a\u0629.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Educational Content Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"edu-transformer-tiny-random\",\n                \"api_call\": \"AutoModel.from_pretrained('edu-transformer-tiny-random')\",\n                \"api_arguments\": \"text\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random educational transformer model for generating content related to educational purposes.\"\n            },\n            \"output\": \"<<<domain>>>: Educational Content Generation\\n<<<api_call>>>: AutoModel.from_pretrained('edu-transformer-tiny-random')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0645\u062b\u0644 AutoModel \u0648tokenizer\u060c \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'edu-transformer-tiny-random' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u062a\u0639\u0644\u064a\u0645\u064a \u0645\u062a\u0646\u0648\u0639\u060c \u0627\u0628\u062a\u062f\u0627\u0621\u064b \u0645\u0646 \u0646\u0635\u0648\u0635 \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0648\u062a\u0645\u0627\u0631\u064a\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0625\u0644\u0649 \u0645\u0648\u0627\u062f \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0645\u062e\u0635\u0635\u0629.\"\n        }\n    ]\n}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u064a\u062a\u0639\u0644\u0642 \u0637\u0644\u0628\u0646\u0627 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629. \u0646\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0645\u0633\u0627\u0639\u062f\u062a\u0646\u0627 \u0641\u064a \u0630\u0644\u0643\u061f\",\"instances\":[{\"API\":{\"domain\":\"Audio Text-to-Speech\",\"framework\":\"ESPnet\",\"functionality\":\"Text-to-Speech\",\"api_name\":\"kan-bayashi_ljspeech_vits\",\"api_call\":\"pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"from transformers import pipeline; tts = pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits'); tts('Hello World')\",\"performance\":{\"dataset\":\"ljspeech\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Text-to-Speech model trained on the ljspeech dataset using the ESPnet toolkit. This model can be used to convert text input into synthesized speech.\"},\"output\":\"<<<domain>>>: Audio Text-to-Speech\\n<<<api_call>>>: pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\\n<<<api_provider>>>: ESPnet\\n<<<explanation>>>:1. \u0623\u0648\u0644\u0627\u064b\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u0648\u0631\u064a\u062f \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u062b\u0645\u060c \u0642\u064f\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 pipeline \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'espnet/kan-bayashi_ljspeech_vits'. \u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0628\u064a\u0627\u0646\u0627\u062a ljspeech \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0645\u0631\u0643\u0628.\\n3. \u0627\u0644\u0622\u0646\u060c \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u062f\u0627\u0644\u0629 pipeline \u0647\u0630\u0647 \u0644\u062a\u062e\u0644\u064a\u0642 \u0635\u0648\u062a \u0627\u0644\u0643\u0644\u0627\u0645. \u0628\u0639\u062f \u0630\u0644\u0643\u060c \u064a\u0645\u0643\u0646\u0643 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0635\u0648\u062a \u0623\u0648 \u062f\u0645\u062c\u0647 \u0641\u064a \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0649\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u0628\u0645\u0648\u0636\u0648\u0639 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u062a\u0623\u062a\u064a \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0641\u0643\u0631\u0629 \u0644\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0637\u0644\u0627\u0628 \u0641\u064a \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644\u0647\u0645 \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u060c \u0648\u0646\u0631\u064a\u062f \u062f\u0645\u062c \u062e\u0627\u0635\u064a\u0629 \u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0642\u0627\u062f\u0645\u0629 \u0641\u064a \u064a\u0648\u0645\u0647\u0645.\",\"instances\":[{\"API\":{\"domain\":\"Calendar Events Prediction\",\"framework\":\"TensorFlow\",\"functionality\":\"Time Series Forecasting\",\"api_name\":\"alvi\",\"api_call\":\"AlviModel.predict('input_data.csv')\",\"api_arguments\":\"input_data.csv\",\"python_environment_requirements\":[\"tensorflow\"],\"example_code\":\"This model can be used to predict upcoming events based on historical data.\",\"performance\":{\"dataset\":\"User's calendar data\",\"accuracy\":\"Not mentioned\"},\"description\":\"An Alvi model designed for time series forecasting using TensorFlow. This model takes input data in the form of a CSV file and predicts future events in a user's calendar.\"},\"output\":\"<<<domain>>>: Calendar Events Prediction\\n<<<api_call>>>: AlviModel.predict('input_data.csv')\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u0628\u064a\u0626\u0629 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0628\u0648\u062c\u0648\u062f \u062d\u0632\u0645\u0629 TensorFlow.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u062a\u0642\u0648\u064a\u0645 \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0642\u0627\u062f\u0645\u0629.\\n3. \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c Alvi \u0627\u0644\u0630\u064a \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 TensorFlow\u060c \u0642\u0645 \u0628\u062a\u0646\u0641\u064a\u0630 \u0648\u0638\u064a\u0641\u0629 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062f\u062e\u0644\u0629 \u0645\u062b\u0644 'input_data.csv'.\\n4. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0644\u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0645\u062a\u0648\u0642\u0639\u0629 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a.\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\n    \"instruction\": \"\u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c \u062c\u062f\u064a\u062f \u064a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0648\u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a \u062a\u0639\u0644\u064a\u0645\u064a\u0629.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Educational Content Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"edu-transformer-tiny-random\",\n                \"api_call\": \"AutoModel.from_pretrained('edu-transformer-tiny-random')\",\n                \"api_arguments\": \"text\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random educational transformer model for generating content related to educational purposes.\"\n            },\n            \"output\": \"<<<domain>>>: Educational Content Generation\\n<<<api_call>>>: AutoModel.from_pretrained('edu-transformer-tiny-random')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0645\u062b\u0644 AutoModel \u0648tokenizer\u060c \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'edu-transformer-tiny-random' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u062a\u0639\u0644\u064a\u0645\u064a \u0645\u062a\u0646\u0648\u0639\u060c \u0627\u0628\u062a\u062f\u0627\u0621\u064b \u0645\u0646 \u0646\u0635\u0648\u0635 \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0648\u062a\u0645\u0627\u0631\u064a\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0625\u0644\u0649 \u0645\u0648\u0627\u062f \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0645\u062e\u0635\u0635\u0629.\"\n        }\n    ]\n}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u064a\u062a\u0639\u0644\u0642 \u0637\u0644\u0628\u0646\u0627 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629. \u0646\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0645\u0633\u0627\u0639\u062f\u062a\u0646\u0627 \u0641\u064a \u0630\u0644\u0643\u061f\",\"instances\":[{\"API\":{\"domain\":\"Audio Text-to-Speech\",\"framework\":\"ESPnet\",\"functionality\":\"Text-to-Speech\",\"api_name\":\"kan-bayashi_ljspeech_vits\",\"api_call\":\"pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"from transformers import pipeline; tts = pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits'); tts('Hello World')\",\"performance\":{\"dataset\":\"ljspeech\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Text-to-Speech model trained on the ljspeech dataset using the ESPnet toolkit. This model can be used to convert text input into synthesized speech.\"},\"output\":\"<<<domain>>>: Audio Text-to-Speech\\n<<<api_call>>>: pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\\n<<<api_provider>>>: ESPnet\\n<<<explanation>>>:1. \u0623\u0648\u0644\u0627\u064b\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u0648\u0631\u064a\u062f \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u062b\u0645\u060c \u0642\u064f\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 pipeline \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'espnet/kan-bayashi_ljspeech_vits'. \u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0628\u064a\u0627\u0646\u0627\u062a ljspeech \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0645\u0631\u0643\u0628.\\n3. \u0627\u0644\u0622\u0646\u060c \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u062f\u0627\u0644\u0629 pipeline \u0647\u0630\u0647 \u0644\u062a\u062e\u0644\u064a\u0642 \u0635\u0648\u062a \u0627\u0644\u0643\u0644\u0627\u0645. \u0628\u0639\u062f \u0630\u0644\u0643\u060c \u064a\u0645\u0643\u0646\u0643 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0635\u0648\u062a \u0623\u0648 \u062f\u0645\u062c\u0647 \u0641\u064a \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0649\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u0628\u0645\u0648\u0636\u0648\u0639 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u062a\u0623\u062a\u064a \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0641\u0643\u0631\u0629 \u0644\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0637\u0644\u0627\u0628 \u0641\u064a \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644\u0647\u0645 \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u060c \u0648\u0646\u0631\u064a\u062f \u062f\u0645\u062c \u062e\u0627\u0635\u064a\u0629 \u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0642\u0627\u062f\u0645\u0629 \u0641\u064a \u064a\u0648\u0645\u0647\u0645.\",\"instances\":[{\"API\":{\"domain\":\"Calendar Events Prediction\",\"framework\":\"TensorFlow\",\"functionality\":\"Time Series Forecasting\",\"api_name\":\"alvi\",\"api_call\":\"AlviModel.predict('input_data.csv')\",\"api_arguments\":\"input_data.csv\",\"python_environment_requirements\":[\"tensorflow\"],\"example_code\":\"This model can be used to predict upcoming events based on historical data.\",\"performance\":{\"dataset\":\"User's calendar data\",\"accuracy\":\"Not mentioned\"},\"description\":\"An Alvi model designed for time series forecasting using TensorFlow. This model takes input data in the form of a CSV file and predicts future events in a user's calendar.\"},\"output\":\"<<<domain>>>: Calendar Events Prediction\\n<<<api_call>>>: AlviModel.predict('input_data.csv')\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u0628\u064a\u0626\u0629 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0628\u0648\u062c\u0648\u062f \u062d\u0632\u0645\u0629 TensorFlow.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u062a\u0642\u0648\u064a\u0645 \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0642\u0627\u062f\u0645\u0629.\\n3. \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c Alvi \u0627\u0644\u0630\u064a \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 TensorFlow\u060c \u0642\u0645 \u0628\u062a\u0646\u0641\u064a\u0630 \u0648\u0638\u064a\u0641\u0629 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062f\u062e\u0644\u0629 \u0645\u062b\u0644 'input_data.csv'.\\n4. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0644\u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0645\u062a\u0648\u0642\u0639\u0629 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a.\"}]}", "{\"instruction\":\"\u0644\u062f\u064a\u0646\u0627 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u062c\u062a\u0645\u0639 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0632\u0648\u062f\u0647\u0645 \u0628\u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\"instances\":[{\"API\":{\"domain\":\"Reinforcement Learning\",\"framework\":\"ML-Agents\",\"functionality\":\"SoccerTwos\",\"api_call\":\"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\"api_arguments\":[\"your_configuration_file_path.yaml\",\"run_id\"],\"python_environment_requirements\":[\"unity-ml-agents\",\"deep-reinforcement-learning\",\"ML-Agents-SoccerTwos\"],\"example_code\":\"Step 1: Write your model_id: Raiden-1001/poca-Soccerv7\\nStep 2: Select your .nn /.onnx file\\nClick on Watch the agent play \ud83d\udc40\",\"performance\":{\"dataset\":\"SoccerTwos\",\"accuracy\":\"Not provided\"},\"description\":\"This is a trained model of a poca agent playing SoccerTwos using the Unity ML-Agents Library.\"},\"output\":\"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2.\u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4.\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\\n\"}]}"]
["{\"instruction\":\"\",\"instances\":[{\"API\":{\"domain\":\"\",\"framework\":\"\",\"functionality\":\"\",\"api_name\":\"\",\"api_call\":\"\",\"api_arguments\":\"\",\"python_environment_requirements\":\"\",\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\"},\"output\":\"<<<domain>>>:\\n<<<api_call>>>: \\n<<<api_provider>>>: \\n<<<explanation>>>:\\n\"}]}", "{\"instruction\":\"\u0627\u062e\u062a\u0631 \u0645\u0634\u0647\u062f\u064b\u0627 \u062a\u0631\u064a\u062f \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u064a\u0635\u0648\u0631 \u0627\u0644\u062d\u064a\u0648\u0627\u0646\u0627\u062a \u0641\u064a \u0627\u0644\u0628\u0631\u064a\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Multimodal Text-to-Video\",\"framework\":\"Hugging Face\",\"functionality\":\"Text-to-Video\",\"api_name\":\"chavinlo/TempoFunk\",\"api_call\":\"pipeline('text-to-video', model='chavinlo/TempoFunk')\",\"api_arguments\":[\"\u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f\"],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"\u0646\u0645\u0648\u0630\u062c Text-to-Video \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0645\u0643\u062a\u0628\u0629 Hugging Face Transformers. \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0642\u0627\u062f\u0631 \u0639\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u062a\u0648\u0649 \u0641\u064a\u062f\u064a\u0648 \u0627\u0633\u062a\u0646\u0627\u062f\u064b\u0627 \u0625\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062f\u062e\u0644.\"},\"output\":\"<<<domain>>>: Multimodal Text-to-Video\\n<<<api_call>>>: pipeline('text-to-video', model='chavinlo/TempoFunk')\\n<<<api_provider>>>: Hugging Face\\n<<<explanation>>>: 1. \u0627\u0633\u062a\u0648\u0631\u062f \u062f\u0627\u0644\u0629 pipeline \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 transformers \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 Hugging Face.\\n2. \u0627\u0633\u062a\u062e\u062f\u0645 \u062f\u0627\u0644\u0629 pipeline \u0644\u0625\u0646\u0634\u0627\u0621 \u0646\u0645\u0648\u0630\u062c \u0646\u0635 \u0625\u0644\u0649 \u0641\u064a\u062f\u064a\u0648.\\n3. \u062d\u062f\u062f \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'chavinlo/TempoFunk' \u0644\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u0648\u0627\u0644\u0630\u064a \u0635\u0645\u0645 \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0628\u0646\u0627\u0621\u064b \u0639\u0644\u0649 \u0627\u0644\u0648\u0635\u0641 \u0627\u0644\u0645\u062f\u062e\u0644.\\n4. \u0642\u062f\u0645 \u0648\u0635\u0641 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0630\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u0646\u0634\u0627\u0621 \u0641\u064a\u062f\u064a\u0648 \u0644\u0647 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0646\u0634\u0626.\\n5. \u064a\u062a\u0645 \u0625\u0646\u0634\u0627\u0621 \u0648\u0635\u0641 \u0644\u0644\u0641\u064a\u062f\u064a\u0648 \u0648\u0644\u064a\u0633 \u0627\u0644\u0641\u064a\u062f\u064a\u0648 \u0646\u0641\u0633\u0647\u060c \u062d\u064a\u062b \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u0646\u0645\u0627\u0630\u062c GPT \u0639\u0644\u0649 \u0625\u0646\u062a\u0627\u062c \u0646\u0635\u0648\u0635 \u0648\u0644\u064a\u0633 \u0645\u062d\u062a\u0648\u0649 \u0628\u0635\u0631\u064a.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u062c\u0645\u0644\u0629 \\\"\u0641\u064a \u064a\u0648\u0645 \u0645\u0646 \u0627\u0644\u0623\u064a\u0627\u0645 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\n    \"instruction\": \"\u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c \u062c\u062f\u064a\u062f \u064a\u0628\u062f\u0623 \u0628\u0640 '\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0648\u064a\u0633\u062a\u0647\u062f\u0641 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0627\u062a \u062a\u0639\u0644\u064a\u0645\u064a\u0629.\",\n    \"instances\": [\n        {\n            \"API\": {\n                \"domain\": \"Educational Content Generation\",\n                \"framework\": \"Hugging Face Transformers\",\n                \"functionality\": \"Transformers\",\n                \"api_name\": \"edu-transformer-tiny-random\",\n                \"api_call\": \"AutoModel.from_pretrained('edu-transformer-tiny-random')\",\n                \"api_arguments\": \"text\",\n                \"python_environment_requirements\": \"transformers\",\n                \"example_code\": \"nlp('\u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629...')\",\n                \"performance\": {\n                    \"dataset\": \"\",\n                    \"accuracy\": \"\"\n                },\n                \"description\": \"A tiny random educational transformer model for generating content related to educational purposes.\"\n            },\n            \"output\": \"<<<domain>>>: Educational Content Generation\\n<<<api_call>>>: AutoModel.from_pretrained('edu-transformer-tiny-random')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0645\u062b\u0644 AutoModel \u0648tokenizer\u060c \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0627\u0644\u062a\u0639\u0644\u064a\u0645\u064a \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'edu-transformer-tiny-random' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0648\u0644\u064a\u062f \u0645\u062d\u062a\u0648\u0649 \u062a\u0639\u0644\u064a\u0645\u064a \u0645\u062a\u0646\u0648\u0639\u060c \u0627\u0628\u062a\u062f\u0627\u0621\u064b \u0645\u0646 \u0646\u0635\u0648\u0635 \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0648\u062a\u0645\u0627\u0631\u064a\u0646 \u062a\u0641\u0627\u0639\u0644\u064a\u0629 \u0625\u0644\u0649 \u0645\u0648\u0627\u062f \u062a\u0639\u0644\u064a\u0645\u064a\u0629 \u0645\u062e\u0635\u0635\u0629.\"\n        }\n    ]\n}", "{\"instruction\":\"\u0623\u0646\u0634\u0626 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629'.\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 '\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629' \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u064a\u062a\u0639\u0644\u0642 \u0637\u0644\u0628\u0646\u0627 \u0628\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629. \u0646\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u062a\u0636\u0645\u064a\u0646 \u0648\u0638\u064a\u0641\u0629 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0627\u0644\u062a\u0637\u0628\u064a\u0642. \u0647\u0644 \u064a\u0645\u0643\u0646\u0643 \u0645\u0633\u0627\u0639\u062f\u062a\u0646\u0627 \u0641\u064a \u0630\u0644\u0643\u061f\",\"instances\":[{\"API\":{\"domain\":\"Audio Text-to-Speech\",\"framework\":\"ESPnet\",\"functionality\":\"Text-to-Speech\",\"api_name\":\"kan-bayashi_ljspeech_vits\",\"api_call\":\"pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"from transformers import pipeline; tts = pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits'); tts('Hello World')\",\"performance\":{\"dataset\":\"ljspeech\",\"accuracy\":\"Not mentioned\"},\"description\":\"A Text-to-Speech model trained on the ljspeech dataset using the ESPnet toolkit. This model can be used to convert text input into synthesized speech.\"},\"output\":\"<<<domain>>>: Audio Text-to-Speech\\n<<<api_call>>>: pipeline('text-to-speech', model='espnet/kan-bayashi_ljspeech_vits')\\n<<<api_provider>>>: ESPnet\\n<<<explanation>>>:1. \u0623\u0648\u0644\u0627\u064b\u060c \u0646\u0642\u0648\u0645 \u0628\u062a\u0648\u0631\u064a\u062f \u0627\u0644\u0641\u0626\u0629 \u0627\u0644\u0636\u0631\u0648\u0631\u064a\u0629 \u0645\u0646 \u062d\u0632\u0645\u0629 transformers.\\n2. \u062b\u0645\u060c \u0642\u064f\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 pipeline \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 'espnet/kan-bayashi_ljspeech_vits'. \u062a\u0645 \u062a\u062f\u0631\u064a\u0628 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0639\u0644\u0649 \u0645\u062c\u0645\u0648\u0639\u0629 \u0628\u064a\u0627\u0646\u0627\u062a ljspeech \u0648\u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645\u0647 \u0644\u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0645\u0631\u0643\u0628.\\n3. \u0627\u0644\u0622\u0646\u060c \u0642\u0645 \u0628\u062a\u0645\u0631\u064a\u0631 \u0623\u064a \u0646\u0635 \u0625\u0644\u0649 \u062f\u0627\u0644\u0629 pipeline \u0647\u0630\u0647 \u0644\u062a\u062e\u0644\u064a\u0642 \u0635\u0648\u062a \u0627\u0644\u0643\u0644\u0627\u0645. \u0628\u0639\u062f \u0630\u0644\u0643\u060c \u064a\u0645\u0643\u0646\u0643 \u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0635\u0648\u062a \u0623\u0648 \u062f\u0645\u062c\u0647 \u0641\u064a \u062a\u0637\u0628\u064a\u0642\u0643 \u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a \u0630\u0648\u064a \u0627\u0644\u0625\u0639\u0627\u0642\u0629 \u0627\u0644\u0628\u0635\u0631\u064a\u0629.\"}]}", "{\"instruction\":\"\u0623\u0646\u0634\u0649\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u0628\u0645\u0648\u0636\u0648\u0639 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\".\",\"instances\":[{\"API\":{\"domain\":\"Natural Language Processing Text Generation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"lewtun/tiny-random-mt5\",\"api_call\":\"AutoModel.from_pretrained('lewtun/tiny-random-mt5')\",\"api_arguments\":\"text\",\"python_environment_requirements\":\"transformers\",\"example_code\":\"nlp('Once upon a time...')\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A tiny random mt5 model for text generation\"},\"output\":\"<<<domain>>>: Natural Language Processing Text Generation\\n<<<api_call>>>: AutoModel.from_pretrained('lewtun/tiny-random-mt5')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>1. \u0642\u0645 \u0628\u0627\u0633\u062a\u064a\u0631\u0627\u062f \u0627\u0644\u0641\u0626\u0627\u062a \u0627\u0644\u0645\u0646\u0627\u0633\u0628\u0629\u060c \u0648\u0647\u064a AutoModel \u0648tokenizer \u0645\u0646 \u0645\u0643\u062a\u0628\u0629 \u0627\u0644\u0645\u062d\u0648\u0644\u0627\u062a.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0646\u0635 \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062f\u0631\u064a\u0628\u0647 \u0645\u0633\u0628\u0642\u064b\u0627 'lewtun/tiny-random-mt5' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0633\u0644\u0648\u0628 from_pretrained \u0644\u0641\u0626\u0629 AutoModel.\\n3. \u0642\u0645 \u0628\u0625\u0646\u0634\u0627\u0621 \u0642\u0635\u0629 \u0642\u0635\u064a\u0631\u0629 \u062a\u0628\u062f\u0623 \u0628\u0640 \\\"\u0643\u0627\u0646 \u064a\u0627\u0645\u0627 \u0643\u0627\u0646 \u0641\u064a \u0623\u0631\u0636 \u0628\u0639\u064a\u062f\u0629\\\" \u0639\u0646 \u0637\u0631\u064a\u0642 \u062a\u0645\u0631\u064a\u0631 \u0645\u0648\u062c\u0647 \u0627\u0644\u0628\u062f\u0627\u064a\u0629 \u0625\u0644\u0649 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0630\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647.\\n\"}]}", "{\"instruction\":\"\u062a\u0623\u062a\u064a \u0634\u0631\u0643\u062a\u0646\u0627 \u0628\u0641\u0643\u0631\u0629 \u0644\u062a\u0637\u0648\u064a\u0631 \u062a\u0637\u0628\u064a\u0642 \u0644\u0645\u0633\u0627\u0639\u062f\u0629 \u0627\u0644\u0637\u0644\u0627\u0628 \u0641\u064a \u062a\u0646\u0638\u064a\u0645 \u062c\u062f\u0648\u0644\u0647\u0645 \u0627\u0644\u062f\u0631\u0627\u0633\u064a\u060c \u0648\u0646\u0631\u064a\u062f \u062f\u0645\u062c \u062e\u0627\u0635\u064a\u0629 \u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0642\u0627\u062f\u0645\u0629 \u0641\u064a \u064a\u0648\u0645\u0647\u0645.\",\"instances\":[{\"API\":{\"domain\":\"Calendar Events Prediction\",\"framework\":\"TensorFlow\",\"functionality\":\"Time Series Forecasting\",\"api_name\":\"alvi\",\"api_call\":\"AlviModel.predict('input_data.csv')\",\"api_arguments\":\"input_data.csv\",\"python_environment_requirements\":[\"tensorflow\"],\"example_code\":\"This model can be used to predict upcoming events based on historical data.\",\"performance\":{\"dataset\":\"User's calendar data\",\"accuracy\":\"Not mentioned\"},\"description\":\"An Alvi model designed for time series forecasting using TensorFlow. This model takes input data in the form of a CSV file and predicts future events in a user's calendar.\"},\"output\":\"<<<domain>>>: Calendar Events Prediction\\n<<<api_call>>>: AlviModel.predict('input_data.csv')\\n<<<api_provider>>>: TensorFlow\\n<<<explanation>>>:1. \u0642\u0645 \u0628\u062a\u0647\u064a\u0626\u0629 \u0627\u0644\u0628\u064a\u0626\u0629 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0628\u0648\u062c\u0648\u062f \u062d\u0632\u0645\u0629 TensorFlow.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0627\u0644\u062a\u0642\u0648\u064a\u0645 \u0644\u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0642\u0627\u062f\u0645\u0629.\\n3. \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c Alvi \u0627\u0644\u0630\u064a \u062a\u0639\u062a\u0645\u062f \u0639\u0644\u0649 \u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627 TensorFlow\u060c \u0642\u0645 \u0628\u062a\u0646\u0641\u064a\u0630 \u0648\u0638\u064a\u0641\u0629 \u0627\u0644\u062a\u0646\u0628\u0624 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u062f\u062e\u0644\u0629 \u0645\u062b\u0644 'input_data.csv'.\\n4. \u064a\u0645\u0643\u0646\u0643 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u062a\u0627\u0626\u062c \u0644\u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u0645\u062a\u0648\u0642\u0639\u0629 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u064a\u0646 \u0641\u064a \u062a\u0637\u0628\u064a\u0642 \u062a\u0646\u0638\u064a\u0645 \u0627\u0644\u062c\u062f\u0648\u0644 \u0627\u0644\u062f\u0631\u0627\u0633\u064a.\"}]}", "{\"instruction\":\"\u0644\u062f\u064a\u0646\u0627 \u0646\u0627\u062f\u064a \u0637\u0644\u0627\u0628\u064a \u064a\u062c\u062a\u0645\u0639 \u0643\u0644 \u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u0644\u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629. \u0632\u0648\u062f\u0647\u0645 \u0628\u0623\u062f\u0627\u0629 \u0644\u0644\u0639\u0628 \u0636\u062f \u0648\u0643\u064a\u0644 \u0627\u0644\u062a\u0639\u0644\u0645 \u0627\u0644\u0622\u0644\u064a.\",\"instances\":[{\"API\":{\"domain\":\"Reinforcement Learning\",\"framework\":\"ML-Agents\",\"functionality\":\"SoccerTwos\",\"api_call\":\"mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\",\"api_arguments\":[\"your_configuration_file_path.yaml\",\"run_id\"],\"python_environment_requirements\":[\"unity-ml-agents\",\"deep-reinforcement-learning\",\"ML-Agents-SoccerTwos\"],\"example_code\":\"Step 1: Write your model_id: Raiden-1001/poca-Soccerv7\\nStep 2: Select your .nn /.onnx file\\nClick on Watch the agent play \ud83d\udc40\",\"performance\":{\"dataset\":\"SoccerTwos\",\"accuracy\":\"Not provided\"},\"description\":\"This is a trained model of a poca agent playing SoccerTwos using the Unity ML-Agents Library.\"},\"output\":\"<<<domain>>>: Reinforcement Learning\\n<<<api_call>>>: mlagents-load-from-hf --repo-id='Raiden-1001/poca-Soccerv7.1' --local-dir='./downloads'\\n<<<api_provider>>>: Unity ML-Agents\\n<<<explanation>>>: 1.\u062a\u0623\u0643\u062f \u0645\u0646 \u062a\u062b\u0628\u064a\u062a Unity ML-Agents \u0648\u062d\u0632\u0645\u0629 ml-agents \u0641\u064a \u0628\u064a\u0626\u0629 Python \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643.\\n2.\u0642\u0645 \u0628\u062a\u0646\u0632\u064a\u0644 \u0646\u0645\u0648\u0630\u062c \u0648\u0643\u064a\u0644 poca \u0627\u0644\u0645\u062f\u0631\u0628 'Raiden-1001/poca-Soccerv7.1' \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0645\u0631 \u0627\u0633\u062a\u062f\u0639\u0627\u0621 API \u0627\u0644\u0645\u0642\u062f\u0645. \u0633\u064a\u0624\u062f\u064a \u0630\u0644\u0643 \u0625\u0644\u0649 \u062d\u0641\u0638 \u0627\u0644\u0645\u0644\u0641\u0627\u062a \u0641\u064a \u0645\u062c\u0644\u062f 'downloads'.\\n3. \u0633\u062a\u062d\u062a\u0627\u062c \u0625\u0644\u0649 \u0625\u0646\u0634\u0627\u0621 \u0645\u0644\u0641 \u062a\u0643\u0648\u064a\u0646 \u0628\u062a\u0646\u0633\u064a\u0642 YAML (\u0645\u062b\u0644 your_configuration_file_path.yaml) \u064a\u0635\u0641 \u0625\u0639\u062f\u0627\u062f \u0627\u0644\u062a\u062f\u0631\u064a\u0628 \u0648\u0627\u0644\u0645\u0639\u0644\u0645\u0627\u062a \u0627\u0644\u0641\u0627\u0626\u0642\u0629 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629 \u0644\u062a\u0634\u063a\u064a\u0644 \u0627\u0644\u0648\u0643\u064a\u0644 \u0641\u064a \u0628\u064a\u0626\u0629 SoccerTwos. LunarLander-v2.\\n4.\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0644\u0623\u0645\u0631 'mlagents-learn' \u0645\u0639 \u0645\u0633\u0627\u0631 \u0645\u0644\u0641 \u0627\u0644\u062a\u0643\u0648\u064a\u0646 \u0648\u0645\u0639\u0631\u0641 \u0627\u0644\u062a\u0634\u063a\u064a\u0644 \u0644\u0628\u062f\u0621 \u0628\u064a\u0626\u0629 Unity \u062d\u064a\u062b \u064a\u0645\u0643\u0646 \u0644\u0644\u0637\u0644\u0627\u0628 \u0644\u0639\u0628 \u0643\u0631\u0629 \u0627\u0644\u0642\u062f\u0645 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629 \u0636\u062f \u062e\u0635\u0645 \u0630\u0643\u0627\u0621 \u0627\u0635\u0637\u0646\u0627\u0639\u064a.\\n5. \u062a\u0623\u0643\u062f \u0645\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0639\u0644\u0627\u0645\u0629 '--resume' \u0644\u0628\u062f\u0621 \u0639\u0645\u0644\u064a\u0629 \u0627\u0644\u062a\u0639\u0644\u0645 \u0645\u0646 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0642\u062f\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 API.\\n\"}]}", "{\"instruction\":\"\u0642\u0645 \u0628\u062a\u0635\u0645\u064a\u0645 \u0646\u0638\u0627\u0645 \u0644\u062a\u0646\u0628\u0624 \u0639\u0645\u0642 \u0627\u0644\u0628\u064a\u0626\u0629 \u0641\u064a \u0645\u0634\u0627\u0647\u062f \u0627\u0644\u0637\u0628\u064a\u0639\u0629 \u0627\u0644\u0645\u062d\u064a\u0637\u0629 \u0628\u0645\u0631\u0643\u0628\u0627\u062a \u0627\u0644\u0642\u064a\u0627\u062f\u0629 \u0627\u0644\u0645\u0633\u062a\u0642\u0644\u0629.\",\"instances\":[{\"API\":{\"domain\":\"Computer Vision Depth Estimation\",\"framework\":\"Hugging Face Transformers\",\"functionality\":\"Transformers\",\"api_name\":\"unique-DPTForDepthEstimation\",\"api_call\":\"DPTForDepthEstimation.from_pretrained('hf-unique-model-private/unique-DPTForDepthEstimation')\",\"api_arguments\":[],\"python_environment_requirements\":[\"transformers\"],\"example_code\":\"\",\"performance\":{\"dataset\":\"\",\"accuracy\":\"\"},\"description\":\"A customized DPT model for depth estimation using the Hugging Face Transformers library.\"},\"output\":\"<<<domain>>>: Computer Vision Depth Estimation\\n<<<api_call>>>: AutoModelForImageClassification.from_pretrained('sayakpaul/glpn-nyu-finetuned-diode-230131-041708')\\n<<<api_provider>>>: Hugging Face Transformers\\n<<<explanation>>>1. \u0627\u062d\u0636\u0631 \u0627\u0644\u062d\u0632\u0645 \u0627\u0644\u0644\u0627\u0632\u0645\u0629 \u0645\u0646 Transformers \u0648PIL \u0644\u0645\u0639\u0627\u0644\u062c\u0629 \u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0635\u0648\u0631.\\n2. \u0642\u0645 \u0628\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c 'sayakpaul/glpn-nyu-finetuned-diode-230131-041708' \u0627\u0644\u0645\u062f\u0631\u0628 \u0645\u0633\u0628\u0642\u064b\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 'AutoModelForImageClassification.from_pretrained'.\\n3. \u062a\u0645 \u062a\u062e\u0635\u064a\u0635 \u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0642\u062f\u064a\u0631 \u0639\u0645\u0642 \u0627\u0644\u0628\u064a\u0626\u0629 \u0641\u064a \u0633\u064a\u0646\u0627\u0631\u064a\u0648\u0647\u0627\u062a \u0645\u0639\u064a\u0646\u0629 \u0644\u0645\u0634\u0627\u0647\u062f \u0627\u0644\u0637\u0628\u064a\u0639\u0629 \u0627\u0644\u0645\u062d\u064a\u0637\u0629 \u0628\u0627\u0644\u0645\u0631\u0643\u0628\u0627\u062a \u0630\u0627\u062a\u064a\u0629 \u0627\u0644\u0642\u064a\u0627\u062f\u0629.\\n4. \u0628\u0639\u062f \u0627\u0644\u062a\u062d\u0645\u064a\u0644\u060c \u064a\u0645\u0643\u0646 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0644\u062a\u0642\u062f\u064a\u0631 \u0639\u0645\u0642 \u0627\u0644\u0628\u064a\u0626\u0629 \u0641\u064a \u0627\u0644\u0635\u0648\u0631 \u0627\u0644\u0645\u0644\u062a\u0642\u0637\u0629 \u0628\u0648\u0627\u0633\u0637\u0629 \u0627\u0644\u0643\u0627\u0645\u064a\u0631\u0627\u062a \u0627\u0644\u0645\u062b\u0628\u062a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0645\u0631\u0643\u0628\u0629 \u0623\u0648 \u0627\u0644\u062a\u064a \u062a\u0645 \u062a\u062d\u0645\u064a\u0644\u0647\u0627 \u0645\u0646 \u0645\u0644\u0641.\"}]}"]
